[
  {
    "objectID": "voluntary.html",
    "href": "voluntary.html",
    "title": "Voluntary Contribution",
    "section": "",
    "text": "Information on the 2016 voluntary contribution system.\n\nThe PAMGuard Voluntary Contribution System\n\n\nPAMGuard maintenance and support is provided through the University of St Andrews by a team of specialists. Historically the maintenance and support function has been supported through direct E&P industry funding via the IOGP Sound and Marine Life Joint Industry Programme. It is anticipated this will cease in late 2016 and transition to a self-funding mechanism.\n\n\nWhat is the PAMGuard voluntary contribution?\n\n\nThe self-funding mechanism will be operated through user Contribution.  It is expected to/will replace previous direct funding from the oil industry, received through the IOGP Sound and Marine Life Joint Industry Programme (JIP). \n\n\nFunds are used by the PAMGuard team to provide basic support to industry users, fix any reported bugs and to provide general maintenance (for instance, ensuring compatibility with new Windows and Java versions).\n\n\nThe contribution is currently set at $5 per day - This amount was decided upon through consultation with PAM equipment/service providers and JIP/industry representatives. It is anticipated that this will acheive our financial target for the each year of US$77,000.\n\n\nWho is expected to contribute? \n\n\nWe expect to receive contributions from owners of PAM equipment that employs the PAMGuard software to detect, classify and localize marine life. Consultation with PAM stakeholders, suggest this will maximise the potential of receiving contributions from multiple E&P activities, across geographic regions being conducted by multiple companies.\n\n\nCurrently, these arrangements are being implemented within the oil & gas industry, particularly for seismic surveys, but we hope that it will be adopted by other offshore users, including the renewable energy sector, in the near future.\n\n\nIt is left to the discretion of individual companies whether to pass the contribution cost through the supply chain so that it is ultimately born by the companies commissioning activities offshore.\n\n\nThe contribution is voluntary, so companies have a choice not to participate, or only to contribute when working for clients who are prepared to contribute."
  },
  {
    "objectID": "tutorials/tethys.html",
    "href": "tutorials/tethys.html",
    "title": "PAMGuard Tethys Interface",
    "section": "",
    "text": "Tethys is a temporal-spatial database for metadata related to passive acoustic studies. Unlike the PAMGuard databases, which hold a lot of detail about a single dataset, a Tethys database can hold summary data for many projects – that can be every project for you as an individual, your lab, or for multiple labs across a larger organisation.\n\n\n\nDeployments tab of the Tethys Data Explorer showing overall deployment effort of stationary moorings (colored circles) and survey track lines (blue lines)\n\n\nTethys does not replace existing PAMGuard databases and binary storage system since it’s not possible to get the level of detail PAMGuard uses during analysis into a single general database. However, the intent is that Tethys will contain enough detail for extensive meta-analysis across large temporal and spatial scales, eliminating (or at least minimising) the requirement for researchers to go back to the original PAMGuard data sets.\n\nLearning Outcomes\nYou will learn how to export data from PAMGuard to a Tethys database and to view the exported data both within PAMGuard and through the Tethys web interface.\n\nInstall Tethys and launch the Tethys Server\nAdd a Tethys module to PAMGuard and connect to the Tethys Server\nExport data from PAMGuard to Tethys, including:\n\nCalibration data\nDeployment data\nDetections\n\nView the exported data both from within PAMGuard and using the Tethys Web client\n\n\n\nDownloads\nDetailed tutorial documentation is in TethysTutorial_V1.1.pdf\nA Zipped archive of processed binary data and PAMGuard database\nDownload Raw audio data files NOPPWavFiles.zip from the St Andrews university research portal."
  },
  {
    "objectID": "tutorials/getstarted.html",
    "href": "tutorials/getstarted.html",
    "title": "Getting Started with PAMGuard",
    "section": "",
    "text": "It all started with Sperm Whales, so you can too\n\n\n\nGetting Started with PAMGuard\nThe purpose of this tutorial is to provide a basic overview of how to use PAMGuard, including adding and configuring plug-in modules.\nThe main learning outcomes are:\n\nLoading and running PAMGuard configurations\nNavigating the Graphical User Interface (GUI)\nBasic Map familiarisation\nRunning and configuring a Click Detector module\nAdding and configuring User Display panels\nAdding, configuring and running a Whistle Detector\nUsing “Ishmael” modules for Energy Sum, Spectrogram Correlation and Matched Filter detectors.\nOverlaying detector graphics on display panels\nAdding and configuring FFT Engines 10.Using spectrogram and radar displays to view detection information\n\nThese learning outcomes can be achieved through a series of exercises that now follow.\nThe exercises can be seen as a guide, so you’re encouraged to experiment with PAMGuard as you work through each one.\n\n\nDownloads\nDetailed tutorial documentation is in PAMGUARD Training Tutorial 2024.pdf\nSample audio files and map files can be downloaded at \nA Zipped archive of PAMGuard configuration files to use with the tutorial are here"
  },
  {
    "objectID": "team/jamie.html",
    "href": "team/jamie.html",
    "title": "Dr Jamie Macaulay",
    "section": "",
    "text": "Jamie Macaulay\n\n\nDr Jamie Macaulay got involved in Passive Acoustic research when he was a physics undergraduate at the University of St Andrews.\nHe then moved over to the School of Biology, completed his PhD on the behaviour of porpoises in tidal rapid environments, moved to Aarhus University in Denmark, and then came full circle back to the Sea Mammal Research Unit as a Research Fellow.\nJamie specialises in applying the latest hardware and software technologies to study echolocating animals (porpoises dolphins, sperm whales, bats…) and in doing so kept coming back to using PAMGuard for his work, adding various features along the way. Over time he became an expert in the source code and now leads the development of several modules as well as AI integration and adapting PAMGuard to work on macOS."
  },
  {
    "objectID": "systemreq.html",
    "href": "systemreq.html",
    "title": "System Requirements",
    "section": "",
    "text": "PAMGuard is currently only fully functional on Windows 64 bit computers, ideally running and Intel processor.\nPAMGuard is mostly written in Java. While there is good cross-platform support for standard sound cards there is currently no support within PAMGuard for ASIO sound cards and other data acquisition devices such as those manufactured by National Instruments except on Windows platforms."
  },
  {
    "objectID": "systemreq.html#installing-and-running-pamguard",
    "href": "systemreq.html#installing-and-running-pamguard",
    "title": "System Requirements",
    "section": "Installing and Running PAMGuard",
    "text": "Installing and Running PAMGuard\n\nWindows\nDownload and run the latest .exe installer from our Downloads page.\nWhen you run the installer, all the files you need will be placed in a folder in your Program Files directory and a startup icon will be added to the Windows start menu.\n\nWindows ARM PCs\nA number of ARM processor based Windows PC’s are now on the market, and more are expected. We’ve not yet tested PAMGuard on ARM and therefore cannot recommend it. While existing versions of PAMGuard may work with ARM, for optimal performance we’ll need to build a different installer and very likely rebuild a number of libraries to external instruments (sound cards, GPS, etc.). Look for an update here towards the end of 2024.\n\n\n\nMac\nA macOS installer is now available for apple computers running macOS + with Apple Silicon (older intel Macs are not supported).\nDownload and run the latest .dmg installer from our Downloads page.\nWhen you run the installer, drag the PAMGuard icon to the Applications folder shortcut - this will automatically install PAMGuard.\nNote that the Mac version does not provide support for some input devices so may not be suitable for real time operation. It should however be fully functional for offline analysis of recordings and use of the PAMGuard viewer."
  },
  {
    "objectID": "slidetest.html",
    "href": "slidetest.html",
    "title": "Passive Acoustic Monitoring Guardianship",
    "section": "",
    "text": "&lt;div\n  class=\"about-entity\"\n  style=\"background-image: url('&lt;%= about.image %&gt;')\"\n&gt;&lt;/div&gt;\n&lt;div class=\"about-contents\"&gt;&lt;%= about.title %&gt;&lt;%= about.body %&gt;&lt;/div&gt;\n\n&lt;% partial(‘_links.ejs.html’, { about, imgOpts: {} }) %&gt;\n\n\n\n\n\n\n\n\n1 / 3\n\n\n\nCaption Text\n\n\n\n\n2 / 3\n\n\n\nCaption Two\n\n\n\n\n3 / 3\n\n\n\nCaption Three\n\n\n❮ ❯"
  },
  {
    "objectID": "rocca/rocca_nwa.html",
    "href": "rocca/rocca_nwa.html",
    "title": "Northwest Atlantic",
    "section": "",
    "text": "The Northwest Atlantic classifier package consists of three different random forest classifier model files, trained with data collected using towed hydrophone arrays during combined visual and acoustic surveys in the northwest Atlantic Ocean. 9 different species are included in the classifier files:\nDelphinus delphis (Dd)\nGrampus griseus (Gg)\nGlobicephala macrorhynchus (Gm)\nStenella attenuata  (Sa)\nSteno bredanensis (Sb)\nStenella coeruleoalba (Sc)\nStenella clymene (Scl)\nStenella frontalis (Sf)\nTursiops truncatus (Tt)\nFull details can be found in the pdf document contained in the zip file.\nDownload Northwest Atlantic Classifier\nBack to ROCCA Classifiers"
  },
  {
    "objectID": "rocca/rocca_nwa.html#northwest-atlantic-classifier",
    "href": "rocca/rocca_nwa.html#northwest-atlantic-classifier",
    "title": "Northwest Atlantic",
    "section": "",
    "text": "The Northwest Atlantic classifier package consists of three different random forest classifier model files, trained with data collected using towed hydrophone arrays during combined visual and acoustic surveys in the northwest Atlantic Ocean. 9 different species are included in the classifier files:\nDelphinus delphis (Dd)\nGrampus griseus (Gg)\nGlobicephala macrorhynchus (Gm)\nStenella attenuata  (Sa)\nSteno bredanensis (Sb)\nStenella coeruleoalba (Sc)\nStenella clymene (Scl)\nStenella frontalis (Sf)\nTursiops truncatus (Tt)\nFull details can be found in the pdf document contained in the zip file.\nDownload Northwest Atlantic Classifier\nBack to ROCCA Classifiers"
  },
  {
    "objectID": "rocca/rocca_haw.html",
    "href": "rocca/rocca_haw.html",
    "title": "Hawaiian Islands",
    "section": "",
    "text": "The Hawaiian Islands classifier package consists of three different random forest classifier model files, trained with data collected using towed hydrophone arrays during combined visual and acoustic surveys around the Hawaiian Islands. 12 different species are included in the classifier files:\nFeresa attenuata (Fa)\nGrampus griseus (Gg)\nGlobicephala macrorhynchus (Gm)\nPseudorca crassidens (Pc)\nPeponocephala electra (Pe)\nPhyseter macrocephalus  (Pm)\nStenella attenuata  (Sa)\nSteno bredanensis (Sb)\nStenella coeruleoalba (Sc)\nStenella longirostris (Sl)\nTursiops truncatus (Tt)\nZiphius cavirostris (Zc)\nFull details can be found in the pdf document contained in the zip file.\nDownload Hawaiian Islands Classifier\nBack to ROCCA Classifiers"
  },
  {
    "objectID": "rocca/rocca_haw.html#hawaiian-islands-classifiers",
    "href": "rocca/rocca_haw.html#hawaiian-islands-classifiers",
    "title": "Hawaiian Islands",
    "section": "",
    "text": "The Hawaiian Islands classifier package consists of three different random forest classifier model files, trained with data collected using towed hydrophone arrays during combined visual and acoustic surveys around the Hawaiian Islands. 12 different species are included in the classifier files:\nFeresa attenuata (Fa)\nGrampus griseus (Gg)\nGlobicephala macrorhynchus (Gm)\nPseudorca crassidens (Pc)\nPeponocephala electra (Pe)\nPhyseter macrocephalus  (Pm)\nStenella attenuata  (Sa)\nSteno bredanensis (Sb)\nStenella coeruleoalba (Sc)\nStenella longirostris (Sl)\nTursiops truncatus (Tt)\nZiphius cavirostris (Zc)\nFull details can be found in the pdf document contained in the zip file.\nDownload Hawaiian Islands Classifier\nBack to ROCCA Classifiers"
  },
  {
    "objectID": "rocca/rocca.html",
    "href": "rocca/rocca.html",
    "title": "ROCCA Configuration files",
    "section": "",
    "text": "Species classifier files for use with the ROCCA classifier module.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nEastern Tropical Pacific\n\n\nThis is a Random Forest classifier model, and can classify 7 different species and 1 genus: Globicephala macrorhynchus, Pseudorca crassidens, Steno bredanensis, Stenella…\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHawaiian Islands\n\n\nThe Hawaiian Islands classifier package consists of three different random forest classifier model files, trained with data collected using towed hydrophone arrays during…\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNortheast Atlantic\n\n\nThis folder contains two Random Forest classifiers (one for clicks and one for whistles) for six commonly occurring northeast Atlantic delphinid species. These classifiers…\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNorthwest Atlantic\n\n\nThe Northwest Atlantic classifier package consists of three different random forest classifier model files, trained with data collected using towed hydrophone arrays during…\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTemperate Pacific\n\n\nThe Temperate Pacific classifier package consists of three different random forest classifier model files, trained with data collected using towed hydrophone arrays during…\n\n\n\n\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "releases/V2_02_14.html",
    "href": "releases/V2_02_14.html",
    "title": "Version 2.02.14",
    "section": "",
    "text": "Citation: Gillespie, D., & Macaulay, J. (2024). PAMGuard (V2.02.14). Zenodo. https://doi.org/10.5281/zenodo.13951593\nWindows Installer: Setup-Pamguard_2_02_14.exe\n\nNew Features\nRocca update: Ability to specify whether strong whistle/encounter threshold is applied as an absolute value, or as the difference between the highest and second-highest votes.\nTethys: Export of Group3D Localiser data\n\n\nBug Fixes\nIshmael Matched Filter detector. Improved correlation algorithm to use correct data normalisation (and a faster FFT).\nIshamel detector graphics. Improved graphics (spectrogram plugins) to work when scrolling the spectrogram and to have better automatic scaling.\nFolder processing: At startup, while PAMGuard catalogues the sound files, a progress bar is shown. This doesn’t change anything, or speed up the process, but does at least let the user know what’s happening (Issue 156).\nNo sound card ? If no sound cards are present on your computer (or if no headphones are attached, even though a sound card is present) when processing files offline, PAMGuard will still slow the analysis rate as it would if a soundcard were present.\nClick Detector click selection on the display. Fixed issue with wrong click being selected when display was highly zoomed in (Issue 158).\nFile processing. Sometimes only processing last file when reprocessing data (issue 162).\nAdded ability for exporter to read annotations. Added ability to export CPOD and FPOD data.\nFixed various bugs in CPOD and FPOD displays and importer. Updated CPOD help file.\nRelease notes for all versions"
  },
  {
    "objectID": "releases/V2_02_06.html",
    "href": "releases/V2_02_06.html",
    "title": "Version 2.02.06",
    "section": "",
    "text": "Windows Installer: Setup-Pamguard_2_02_06.exe\nMac Installer: PAMGuard_v2_02_06.dmg\nInterim release with additional simulator for lowish frequency baleen whales (200Hz to 1kHz) Bug fix of static objects.\nRelease notes for all versions"
  },
  {
    "objectID": "releasenotes.html",
    "href": "releasenotes.html",
    "title": "Release Notes",
    "section": "",
    "text": "First official release for Mac OS11+, ARM Processors\n\n\nAdded ability to export click events to the exporter.\nUpdates to deep learning module to deal with group detections.\nNew icons and graphical user interface style for Mac.\n\n\n\nFixed important timing bug that affected offline analysis when there was a gap in data, causing certain binary files before the gap to be closed with an incorrect end time.\nFixed issue #177 with clip generator dialog always reverting to first available input source.\nRemoved unnecessary text output from DL classifier module.\nFixed units on spectrogram displays for air based measurements.\nFixed bug in whistle and moan detector graphics that caused whistles with branches to not draw."
  },
  {
    "objectID": "releasenotes.html#new-features",
    "href": "releasenotes.html#new-features",
    "title": "Release Notes",
    "section": "",
    "text": "Added ability to export click events to the exporter.\nUpdates to deep learning module to deal with group detections.\nNew icons and graphical user interface style for Mac."
  },
  {
    "objectID": "releasenotes.html#bug-fixes",
    "href": "releasenotes.html#bug-fixes",
    "title": "Release Notes",
    "section": "",
    "text": "Fixed important timing bug that affected offline analysis when there was a gap in data, causing certain binary files before the gap to be closed with an incorrect end time.\nFixed issue #177 with clip generator dialog always reverting to first available input source.\nRemoved unnecessary text output from DL classifier module.\nFixed units on spectrogram displays for air based measurements.\nFixed bug in whistle and moan detector graphics that caused whistles with branches to not draw."
  },
  {
    "objectID": "releasenotes.html#new-features-1",
    "href": "releasenotes.html#new-features-1",
    "title": "Release Notes",
    "section": "New Features",
    "text": "New Features\nRocca update: Ability to specify whether strong whistle/encounter threshold is applied as an absolute value, or as the difference between the highest and second-highest votes.\nTethys: Export of Group3D Localiser data"
  },
  {
    "objectID": "releasenotes.html#bug-fixes-1",
    "href": "releasenotes.html#bug-fixes-1",
    "title": "Release Notes",
    "section": "Bug Fixes",
    "text": "Bug Fixes\nIshmael Matched Filter detector. Improved correlation algorithm to use correct data normalisation (and a faster FFT).\nIshamel detector graphics. Improved graphics (spectrogram plugins) to work when scrolling the spectrogram and to have better automatic scaling.\nFolder processing: At startup, while PAMGuard catalogues the sound files, a progress bar is shown. This doesn’t change anything, or speed up the process, but does at least let the user know what’s happening (Issue 156).\nNo sound card ? If no sound cards are present on your computer (or if no headphones are attached, even though a sound card is present) when processing files offline, PAMGuard will still slow the analysis rate as it would if a soundcard were present.\nClick Detector click selection on the display. Fixed issue with wrong click being selected when display was highly zoomed in (Issue 158).\nFile processing. Sometimes only processing last file when reprocessing data (issue 162).\nAdded ability for exporter to read annotations. Added ability to export CPOD and FPOD data.\nFixed various bugs in CPOD and FPOD displays and importer. Updated CPOD help file."
  },
  {
    "objectID": "releasenotes.html#new-features-2",
    "href": "releasenotes.html#new-features-2",
    "title": "Release Notes",
    "section": "New Features",
    "text": "New Features\nDeep Learning Classifier. Major upgrade to support for Deep Learning models in PAMGuard. See online help for details.\nClick detector: Remembers locations of displays and doesn’t continually reset them.\nHelp for Matched Click Classifier.\nProject information dialog. This allows capture of essential project information to store with your data. See menu item Settings/Project information.\n‘Effort’ management system. New map options allow colouring of track line by ‘effort’ from various other modules. This is currently the acquisition system (so the track will change colour when PAMGuard is running), the binary store system (likely the same as the acquisition) or data from Logger forms. This system will be extended to other modules in the near future.\nAdded a new exporter which allows users to export data to .mat (MATLAB, Python), .RData (open in R) or .wav files (open in Sonic Visualiser, Audacity etc.)"
  },
  {
    "objectID": "releasenotes.html#tethys-database",
    "href": "releasenotes.html#tethys-database",
    "title": "Release Notes",
    "section": "Tethys Database",
    "text": "Tethys Database\nMany users will be aware that we’re integrating an interface to the Tethys Database into PAMGuard. Some basic features are available for testing. If interested, please contact the PAMGuard support team."
  },
  {
    "objectID": "releasenotes.html#bug-fixes-2",
    "href": "releasenotes.html#bug-fixes-2",
    "title": "Release Notes",
    "section": "Bug Fixes",
    "text": "Bug Fixes\nLinking clicks to offline clicks table. We had a database that had become corrupted so added code to relink offline clicks to their corresponding clicks from binary data.\nDrawing non-acoustic data: Data that were not associated with any hydrophones, e.g. visual sightings in Logger forms were not drawing on the map. This fixed and PAMGuard will use the vessels GPS position as reference.\nLookup tables: fix feature which was causing table entries to repeat.\nClick Train Detector: Add exception handlers to avoid errors as PAMGuard stops / restarts.\nGroup Detection starts and ends: Check data integrity function fixed and now inserts correct times of start and ends of events into database.\nClip generator. Changes to ensure PAMGuard keeps audio data long enough to make clips. In some circumstances data were being discarded too early so clips could not be created.\nAcquisition “Skip initial seconds” feature, designed to remove high sample levels e.g. from calibration tones at start of a soundtrap recording was not working with the click detector. This is fixed but replacing all data with 0’s and still sending data. Note that this may lead to artificially low noise measures at the start of a file.\nData reprocessing options. Updated to ensure that the option “Start normally. Note risk of overwriting!” is always available. Also improved code naming binary files to attempt to push them to exact times, rather than a couple of seconds after the hour.\nimproved code naming binary files to attempt to push them to exact times, rather than a couple of seconds after the hour.\nUpdated icons to improve display on high definition screens.\nSAIL Daq Card. Automatic restart when DAQ card stalls (happening increasingly often with latest Windows updates)"
  },
  {
    "objectID": "releasenotes.html#new-features-3",
    "href": "releasenotes.html#new-features-3",
    "title": "Release Notes",
    "section": "New Features",
    "text": "New Features\nImporting modules from other configurations: New options from file menu allowing import of specific modules, or module settings from other configurations. E.g. if you had three similar configurations and had set one of them up with a new detector, or got the click classifier settings set up just right in one of those configurations, you can import the additional modules or the click detector settings easily into the other configurations.\nImproved SUD (soundtrap compressed files) file performance when scrolling through audio data in Viewer mode.\nViewer Launch by right clicking on sqlite database and selecting “open with / PAMGuard ViewerMode” launcher menu option."
  },
  {
    "objectID": "releasenotes.html#bug-fixes-3",
    "href": "releasenotes.html#bug-fixes-3",
    "title": "Release Notes",
    "section": "Bug Fixes",
    "text": "Bug Fixes\nLogger Forms\nBoolean (logical true/false, yes/no) data were not showing correctly in Viewer mode. Now fixed\nData selectors for plotting on map were not working, also fixed\nBearing localizer running offline was not correctly saving updated bearings to the database. Now fixed.\nROCCA Classifier fixes\nAllow Rocca to run without classifiers: Fixed bug that threw an error if no classifier files were  specified in Rocca Params dialog\nFix memory issue with RoccaContourDataBlocks not being released for garbage collection\nSet RoccaContourDataBlock objects to null and stop PamObserver Timer to\nforce release\nFix problem tracing whistles in Rocca spectrogram pop-up: Whistle and raw data were being cleared before the user had time to trace out the whistle, causing PAMGuard to throw an exception.  Both were already being cleared when the pop-up window is closed, so no need to do it here.\nDIFAR Module: Bug crashing the module with null pointer errors fixed.\nWhistle Detector: Fixed bug which caused the detector to slow to almost zero speed when large complex sounds with many branches were detected.\nClick Detector Offline Event Marking: Fixed problem of events not being correctly deleted and also of clicks not being correctly reassigned to different events.\nScreen Position: When using multiple monitors, if you move a configuration to a computer with a different monitor layout, the GUI should work out if it’s opening on a screen area which no longer exists and move itself onto the primary monitor.\nFile Folder Processing: Previous version had a bug which caused files to not always be sorted into the correct order for processing. This caused some instability in some detectors, causing memory leaks when new data arrived with time stamps earlier than already processed data in memory. This is now fixed – files are ow correctly sorted alphabetically by file name, i.e. not including the name of the folder containing the files."
  },
  {
    "objectID": "releasenotes.html#bug-fixes-4",
    "href": "releasenotes.html#bug-fixes-4",
    "title": "Release Notes",
    "section": "Bug Fixes",
    "text": "Bug Fixes\nTime zone displays: Fixed some bugs associated with options to have PAMGuard display times in local time, rather than UTC. This was affecting times typed into the scroll bars of displays which were reading local time, even when set to use UTC."
  },
  {
    "objectID": "releasenotes.html#bug-fixes-5",
    "href": "releasenotes.html#bug-fixes-5",
    "title": "Release Notes",
    "section": "Bug Fixes",
    "text": "Bug Fixes\nROCCA Memory Leak: A memory leak in ROCCA, which mostly occurred when processing large datasets of many offline files, has been fixed.\nData Map: “Scroll To Data” pop-up menu, which didn’t always scroll to the correct place, is now fixed.\nBearing Localiser offline: If reprocessing bearings, the localizer was not correctly loading required raw or FFT data to input to the cross correlation algorithm. This is now fixed so that you can reprocess bearings in viewer mode.\nMap files: Added additional exception handlers to handle corrupt map files."
  },
  {
    "objectID": "releasenotes.html#new-features-4",
    "href": "releasenotes.html#new-features-4",
    "title": "Release Notes",
    "section": "New Features",
    "text": "New Features\nRestart Options: When you restart processing of offline files, if output data already exist (binary data of within database tables) you will be asked if you want to overwrite the data, cancel, or try to continue from where to left off.\nUpdated SoundTrap sud file interface so that PAMGuard now extracts and stores the Click Detector settings from the sud files and stores them within the PAMGuard configuration. This does not affect processing, but is important for record keeping.\nGPS options to use any valid RMC or GGA string. Not all GPS receivers output their RMC data as GPRMC – e.g. some may output as GNRMC. A new option allows the GPS module to use any string, whatever the first two characters of the string name may be."
  },
  {
    "objectID": "releasenotes.html#bug-fixes-6",
    "href": "releasenotes.html#bug-fixes-6",
    "title": "Release Notes",
    "section": "Bug Fixes",
    "text": "Bug Fixes\nUse of localization sensor and orientation data for static hydrophones had a bug whereby it would continually ‘forget’ angle offsets applied to static hydrophones in viewer mode. This is now fixed.\nClick tool bar: Correctly shows event selection options even if no species classification options are in place.\nFixed Landmarks: Earlier versions were ‘losing’ these every time PAMGuard started or new data were loaded in viewer mode. Now fixed.\nROCCA: Fixed (another) memory leak which caused PAMGuard to crash when processing large data sets with the ROCCA classifier.\nIshmael Modules: Fixed bug which occasionally caused crashes when processing many files offline.\nPAMDog: Fixed bug in watchdog program which was trying to start PAMGuard before modules were fully loaded. The watchdog now correctly waits until modules are loaded before attempting to start PAMGuard processing."
  },
  {
    "objectID": "releasenotes.html#new-features-5",
    "href": "releasenotes.html#new-features-5",
    "title": "Release Notes",
    "section": "New Features",
    "text": "New Features\nNew sound type for simulated sounds which generates random chirps between around 200 and 800Hz, roughly the frequency you’d expect sound from higher frequency baleen whales, such as humpbacks, to vocalise at.   \nHiding tool tips. A menu item to permanently turn off all tool tips, or tap the ‘Esc’ key to turn them off for 6 seconds if they are getting in the way, particularly when trying to interact with displays using the mouse."
  },
  {
    "objectID": "releasenotes.html#bug-fixes-7",
    "href": "releasenotes.html#bug-fixes-7",
    "title": "Release Notes",
    "section": "Bug Fixes",
    "text": "Bug Fixes\nTwo memory leaks:\nA memory leak has been found which seems to mostly occur in Viewer mode. Some data on background noise measurements are not being cleared from memory, so memory will eventually run out. This could happen after browsing a lot of data, but was most likely when reprocessing files offline, for example running click classifiers. This is now fixed.\nAlso fixed a memory leak in the ROCCA whistle classification module."
  },
  {
    "objectID": "releasenotes.html#new-features-6",
    "href": "releasenotes.html#new-features-6",
    "title": "Release Notes",
    "section": "New Features",
    "text": "New Features\nSoundTrap SUD file reading. If you’re using SoundTrap autonomous recorders from Ocean Instruments, you no longer need to decompress the SoundTrap files prior to processing. This will save time and a lot of disk space. Extraction of clicks from the inbuilt SoundTrap Click detector can also happen while processing SUD file data with other detectors, thereby streamlining the whole processing chain. Read the online Help for details."
  },
  {
    "objectID": "releasenotes.html#click-train-detector-features-and-bug-fixes",
    "href": "releasenotes.html#click-train-detector-features-and-bug-fixes",
    "title": "Release Notes",
    "section": "Click Train Detector Features and Bug Fixes",
    "text": "Click Train Detector Features and Bug Fixes\nFeatures\nChanges to GUI to make dialog shorter for low DPI screens.\nComplete rewrite of the classification system to have nested classifiers which can be enabled or disabled.\nChanges to classification GUI to accommodate the new classification system.\nAddition of data selectors to the minimum number of clicks accepted by the classifier. This allows the click-by-click classifier and the click train detector to be used to together to improve classification accuracy.\nBug fixes\nClick detection bug fix in kernel which improved click fragmentation.\nBug fix to database were JSON data from classifier was being trimmed.\nDocumentation\nComprehensive help file including description of the algorithm, screen grabs and examples.\nBug fixes"
  },
  {
    "objectID": "releasenotes.html#other-features",
    "href": "releasenotes.html#other-features",
    "title": "Release Notes",
    "section": "Other Features",
    "text": "Other Features\nHelp documentation for Backup Manager\nHelp documentation for Matched Click Classifier\nDatabase logging of offline tasks (such as click re-classification, bearing calculation, etc.)\nData selector for Whistle Classifier module\nVariable sound output level when using National Instruments devices for sound playback.\nSpeed improvement when processing flac audio files."
  },
  {
    "objectID": "releasenotes.html#bug-fixes-8",
    "href": "releasenotes.html#bug-fixes-8",
    "title": "Release Notes",
    "section": "Bug Fixes",
    "text": "Bug Fixes\nSoundtrap DWV import. Will now generate binary files even if DWV file doesn‚’t exist (which is correct behavior in quiet conditions when no clicks were detected).\nSpectrogram. Changes to stop occasional crashing when restarting processing of wav files.\nSizing of dialogs on ultra high definition monitors so that data fields are sized correctly.\nFixed a memory leak in ROCCA\nFixed issues with options in Click Detector bearing time display which (when using planar and 3D arrays) allow you to plot relative to the array, the vessel, or North."
  },
  {
    "objectID": "releasenotes.html#file-format-change",
    "href": "releasenotes.html#file-format-change",
    "title": "Release Notes",
    "section": "File Format Change",
    "text": "File Format Change\nChanges have been made to the binary file format to support the output of additional noise outputs for certain detectors (See below). Binary files created with this version will not be compatible with earlier versions 2.01.### and below. This version will read and may convert earlier format binary files.\nLocalisation Modules\nBearing and Group 3D localization modules have been thoroughly tested and a number of bugs rectified. Documentation has been developed and is available in the online help. Further, a number of example configurations have been generated, configuration files for these are available in the PAMGuard downloads area here.\nDetection Group Localiser\nThis module has been renamed “Detection Grouper”, so as to avoid confusion with the Group 3D localizer. This is because the Detection Grouper is more for organizing data into groups to be localized than it is for doing localization.\nMinor Bug Fixes\n1.       Bug   490. Error when trying to select File in Sound Acquisition.\n2.       Bug   491. LTSA spectrogram frequency axis does not update when changing the params\n3.       Bug   492. Data Model does not update button//tooltip text when underlying data changes\n4.       Bug   493. Click Detector does not work when using the ‘skip x seconds’ option in Sound Acquisition dialog\n5.       Bug   494. Detection Group Localiser data unit end time did not adjust when the last member was remove\n6.       Bug   495. TD FX display throws NullPointerException if user has removed all data units and then moves mouse over display area\nUpgrades\n1.        Added SIDE module for detector/operator analytics\n2.        Upgrade database system to work with MySQL 8.0\n3.        Improvements to datamap display, to ensure even small images will be shown\n4.        Allow Clip Generator to create both a binary record and a wav file\n5.        Implemented a Backup Manager for backing up multiple types of data to multiple locations]\n6.        Upgrades to how PAMGuard lets the user enter custom date formats in the Sound Acquisition dialog\n7.        Extended XML-output support to all of the modules\n8.        Updates to the simulated sounds in the Sound Acquisition module\n9.        Upgrades to the Symbol Manager framework, to give more control over colours and symbols\n10.        Added an option to hide the ship on the map\n11.        Update Rocca module to allow operation without a classifier (in case all you need are the measurements)\n12.        Update whistle and moan detector to better handle small stubs or spurs coming off the side of whistles\n13.        Extend the Hyperbolic Localiser to handle 2D planar arrays (previously limited to 3D volumetric arrays)\n14.        new CPOD features\n15.        Better interpolation of data by the Decimator when decimating/upsampling by a non-integer amount\n16.        Noise Level Outputs - as an aid to performance diagnosis, some detectors (currently the GPL, Click Detector and Whistle and Moan Detector) are outputting additional noise metrics to their binary output files. These can be read with the PAMGuard Matlab library and used to diagnose system performance in varying noise conditions. Improved displays within PAMGuard for these noise metrics will be included in a future release.\n17.        An implementation of the Generalized Power Law Detector, developed by Tyler Helble ([Helble et al., ‘A generalized power-law detection algorithm for humpback whale vocalizations’, The Journal of the Acoustical Society of America, vol. 131, no. 4, pp. 2682–2699, 2012) is now available. For details, see the online help\n18.        A Deep Learning module for sound classification is now available. This allows users to deploy a large variety of deep learning models natively in PAMGuard. For details, see the online help."
  },
  {
    "objectID": "releasenotes.html#version-1.12.00-beta-february-2013",
    "href": "releasenotes.html#version-1.12.00-beta-february-2013",
    "title": "Release Notes",
    "section": "Version 1.12.00 Beta February 2013",
    "text": "Version 1.12.00 Beta February 2013\nNew Modules\nClip Generator: Saves and displays short waveform clips around detections. Can work with any detector (or indeed any other data stream within PAMGuard).  \nLocal time display: displays the computers local time on the main display panel.\nWILD interface: provides the user the ability to integrate PAMGuard with the WILD ArcGIS-based marine mammal survey software package.\nNew Features\nCore Functionality\nNew storage options have been implemented which give the user greater control of where data are stored.\nModules have been arranged into different groups in the configuration menus and tool tip texts have been added to these menus to provide additional information to users.  \nRadar Display\nFunctionality has been added to the radar display so that bearings can be shown relative to either the vessel or to true North.\nBetter control of data in viewer mode, making is easy to scroll through and view data for short time periods.\nGPS\nFunction to import GPS data from other data sources for the PAMGuard viewer.\nDatabase\nCan now copy data from binary storage to the database offline for any module having both binary and database storage.\nCan create a blank MS Access database (2007 and later *.accdb formats only).\nCan open MS Access from within PAMGuard to make it easier to view database content.\nSupport for open office databases.\nSound Acquisition\nNational Instruments cards: Added code in support of the new x-series devices.\nASIO sound cards: Added support for a new open source ASIO driver system (jasiohost). The old system has been left in place for now while we assess users response to the newer system.\nAIS\nSupport has been added to the AIS module to read data from class B AIS stations (used by smaller vessels), Base stations and Aids To Navigation.\nSpectrogram Display\nCan now scroll as well as wrap the data.\nWhistle Detector\nStores amplitude and bearing information correctly in the binary files.\nLogger Forms\nA substantial amount of work has been carried out on Logger forms, funded by the South West fisheries Science Center.\nClick Detector\nTwo additional displays have been added to the click detector\n1.       Concatenated Spectrogram which enables users to view spectra for multiple clicks within the same event.\n2.       Inter Detection Interval Display which provides a visual interpretation of the inter-detection interval.\nTarget Motion Analysis: Updated target motion analysis module so that it works in three (as opposed to two) dimensions.\nAlarm in click detector to issue audible warning when certain click types are detected.\nDisplay options have been improved making it easier to display only certain types of clicks.\nIshmael Detection Modules\nWe have implemented database storage for output of these modules.\nBug fixes\n’         Radar Display: A bug which stopped the radar display from correctly displaying bearings to whistles from arrays containing more than two hydrophone elements has been fixed.\n’         Database Speed: A substantial rewriting of some of the indexing methods in the database module has led to a significant increase in the speed at which data are written to the database (orders of magnitude for large databases). This is having a significant impact on the overall reliability of the software. Other changes have increased the speed (again by orders of magnitude) at which data are read back into PAMGuard when using the viewer.\n’         PAMGuard start-up options have been substantially improved:\n1.       Pressing cancel will now exit PAMGuard\n2.       Clearer when a new (blank) configuration is being created\n3.       Can create a database for viewer mode from scratch.\n’         Timing calculations for simulated data have been improved."
  },
  {
    "objectID": "releasenotes.html#version-1.11.02-beta-may-2012",
    "href": "releasenotes.html#version-1.11.02-beta-may-2012",
    "title": "Release Notes",
    "section": "Version 1.11.02 Beta May 2012",
    "text": "Version 1.11.02 Beta May 2012\nNew Features\n‘         Hiding side panels. The panel on the left of the display can be hidden’ this creates more space for other displays.\n’         Click Detector Displays. Numbers of small displays (e.g. the Wigner plot) is now remembered between runs.\nBug Fixes\n’         PAMGuard Colours: Now selects correct night time colours at programme start-up.\n’         Bug in Noise Monitor. Version 1.11.01 would crash if only a subset of channels were selected, e.g. if you only measured noise on channel 0 of a two channel configuration. This bug is now fixed"
  },
  {
    "objectID": "releasenotes.html#version-1.11.01-beta-april-2012",
    "href": "releasenotes.html#version-1.11.01-beta-april-2012",
    "title": "Release Notes",
    "section": "Version 1.11.01 Beta April 2012",
    "text": "Version 1.11.01 Beta April 2012\nNew Modules\n’         ROCCA Whistle Classifier (see online help)\n’         Noise Measurement (see online help)\n’         Logger Forms\nClick Detector Updates\n’         Amplitude Selector. This is a small popup window which allows you to set a minimum amplitude for clicks to be displayed on the bearing time display. Primarily useful during offline analysis using the viewer to remove clutter from the display.\n’         ICI of unassigned clicks. Previously ICI was only shown for clicks assigned to a click train. Can now be shown for all clicks, but note that this will be meaningless if there is &gt; 1 animal present.\n’         Echo detection. Automatic detection of echoes (see online help).\n’         Offline event marking. Offline event marking similar to functionality in RainbowClick is now available in the PAMGuard viewer. Event summary data is stored in the database and can also be exported to text files (e.g. for importing into the Distance software). \n’         Target motion analysis in two and three dimensions using a variety of models to fit the data (see help files for details).\n’         Toolbar with display species selection.\n’         Bearings can be calculated using the envelope of the waveform rather than the full waveform. The waveform or envelope can also be filtered prior to bearing calculation.\n’         Click species templates. Spectral templates may be generated / reloaded for different types of click.\n’         Click concatenated spectrogram display helps to view spectral properties of multiple clicks in an event.\nRaw Data Loading\nIn viewer mode, use the Acquisition control dialog to select the location of wav files associated with the data. This will unlock two useful features of the display:\n’         The spectrogram will automatically generate and display spectrogram data.\n’         The spectrogram display and the click detector will both allow you to play back sound via the system sound card.\nMinor Features and Bug Fixes\n’         The default preamplifier gain in the acquisition module has been changed to 0dN\n’         The Binary store now saves a complete data map between runs of the PAMGuard viewer. This leads to significant improvements in the time the viewer takes to load large data sets.\n’         DataMap: The click and the  whistle and moan detectors can now also show graphs of data density as a function of frequency instead of simple bar charts of data density vs. time (datagrams). This makes it much easier to find features such encounters with animals.\n’         Formatting of times in scroll bars has been improved (e.g. will say 15 m instead of 900s)\n’         The FFT Engine can now copy with FFT hops which are greater than the FFT length.\n’         The filter module can now also generate finite Impulse Response (FIR) filters. Note however, that FIR filters may require considerably more execution time than IIR filters.\n’         Database support for MS Access 2007 and 2010 database formats.\n’         3D bearings from click detector using volumetric arrays. For small arrays (where the distance between elements is less than a few hundred samples) bearings are now correctly calculated in three dimensions.\n’         Main GUI frame no longer disappears behind other windows when viewer data are loaded.\n’         Toolbar with quick access to start / stop buttons.\n’         Filter and Decimator modules output data name. These were not unique in previous versions which made it impossible for downstream modules to connect to the correct data stream. This has been fixed.\n’         Whistle classifier has some new features in the classifier training panel. It is also now possible to export training data files directly from binary data files.\n’         The hydrophone localisation systems have been updated to better use information from true and magnetic heading sensors.\n’         The FFT module has been updated to ensure it finds it’s correct data source, even if that data source is loaded after the FFT module is created."
  },
  {
    "objectID": "releasenotes.html#version-1.10.00-beta-december-2010",
    "href": "releasenotes.html#version-1.10.00-beta-december-2010",
    "title": "Release Notes",
    "section": "Version 1.10.00 Beta December 2010",
    "text": "Version 1.10.00 Beta December 2010\nNew features\n1. Binary storage module.\nPerforms a parallel role to the PAMGAURD database but uses binary files in a proprietary format which is considerably more efficient for data of unknown length such as whistle contours or small clips of click waveform. This feature is currently implemented in the following modules:\n’         Click Detector\n’         Whistle and Moan detector\n’         AIS\n2. Improved offline viewer functionality.\nThe offline viewer is much improved with better data scrolling and the ability to view data either stored in the database or the binary storage system. Work has stated on functions which read and use data stored in audio files. This is currently limited to re-calculating and displaying displaying spectrogram data during viewer mode operation. \n3. Heading sensor readout\nPAMGuard can now read true or magnetic heading data from gyro compasses, fluxgate compasses, etc. See help for details.\n4. Click detector offline event marking\nFunctionality for offline analysis, similar to that in RainbowClick is now partially incorporated into the PAMGuard click detector in viewer mode. Help files have not yet been developed for these features.\n5. Better support in the Decimator module for non-integer frequency division (i.e. previous versions would convert well from 96kHz to 48kHz, but not from 500kHz to 48kHz)\nBug fixes\n1. Placement of axes on some displays (array manager and depth side panel). Problem in 1.9.01 Beta now fixed.\n2. Fixed problems of NMEA read out not restarting after a serial drop out. NMEA now restarts correctly.\n3. Fixed a memory leak which caused occasional crashes, particularly when large numbers of files were processed offline.\n4. The correct file path separator is used in Sound recording names under Linux (which uses “/” as opposed to “\\” on Windows)."
  },
  {
    "objectID": "releasenotes.html#version-1.9.01-beta-may-5-2010",
    "href": "releasenotes.html#version-1.9.01-beta-may-5-2010",
    "title": "Release Notes",
    "section": "Version 1.9.01 Beta May 5 2010",
    "text": "Version 1.9.01 Beta May 5 2010\nBug fixes\nAcquisition dialog for ASIO sound cards was resetting all channel numbers to zero.\nDegree symbols throughout PAMGuard have been fixed so that they work on all Win64, (Mac and Linux.)\nAn unnecessary channel warning from the seismic veto has been removed.\nContour check boxes on the map dialog have now been placed in a scrolling pane so that if there are lots of contours, the dialog doesn’t become too bit to fit on a screen.\nNew Feature\npsf file name is now displayed in the title bar of the main PAMGuard display.\nWindows Installer now sets permissions on PAMGuard folder so that don’t need to be an administrator in order to create new files in that directory. Prevents problems especially under Vista/Windows 7 when saving psfs and recording sounds to the default directory."
  },
  {
    "objectID": "releasenotes.html#version-1.9.00-beta-april-2010",
    "href": "releasenotes.html#version-1.9.00-beta-april-2010",
    "title": "Release Notes",
    "section": "Version 1.9.00 Beta April 2010",
    "text": "Version 1.9.00 Beta April 2010\nChannel numbering\nA new internal channel numbering scheme for ASIO sound cards was released on 8 March in Alpha version 1.8.02. These changes have now been promoted to this Beta release 1.9.00. These changes were described in an email to PAMGuard User, the text of which is repeated here:\nWithin PAMGuard, there have been constant problems with lookup tables relating hardware channel numbers to internal channel numbers. 99.9% of the time, this is not a problem since people are just reading channels 0 and 1 from a normal sound card or a list of channels 0,1,2,3, etc from an ASIO card or National Instruments card. However, when using the ASIO sound acquisition system, it is possible to read out hardware channels 2,3,4,5 say and those numbers would propagate through PAMGuard and be used by all the detectors. While this gave some clarity to  the displays, it also created a number of problems since look up tables were constantly required to relate hardware numbers and software numbers in every PAMGuard module. Since this type of channel numbering was only implemented several years into the PAMGuard project, it was never fully implemented or well supported by the different modules which resulted in a number of bugs which could cause confusion as to which hydrophones were being used during localisation or during calibrated measurement. The situation tended to only arise with a small number of ASIO sound cards such as the RME Fireface 400 on which the most useful inputs, the balanced line inputs, are hardware channels 4,5,6 and 7 on the back of the instrument. (On the Fireface 800, the balanced line inputs are channels 0 to 7). When using the National Instruments system, data were always sent into the rest of PAMGuard with sequential channel numbering starting at 0. This was required in order to support multiple NI Daq boards where it is possible to read for example channel 0 and 1 on two different devices, so to uniquely identify channels in the rest of PAMGuard, the only rational thing to do was to re-label those channels 0,1,2,3.\nThere have been other annoyances with the ASIO channel numbering scheme. For instance, if you had a configuration which worked in real time using channels 7 and 8 of a sound card, you could not use that same configuration to analyse wav files, which would always read their data as channels 0 and 1. Similarly if you switched sound cards, you may have to reconfigure every detector and several of the displays to handle the changes in channel numbering.\nI have spent a considerable amount of time trying to work out a better system for handling channel numbering in PAMGuard and have decided that the only practical thing to do is to force all software channel numbering back to a zero indexed system. i.e. even if you read out hardware channels 3,4,5 and 6, within PAMGuard, everywhere apart from the Sound acquisition dialog, you will see them listed as channels 0,1,2 and 3.  The consequences of doing this are mainly very good. Most users will not notice any changes. For those who need for some reason to read channel numbers not starting at zero things will be more stable. However, when you go to a new version with this new feature, it will be necessary to reconfigure all the modules in any existing configurations. To do this, open the configuration dialog for each module in turn and select the correct, zero indexed, channel number.\nOther Changes / new features\nPAMGuard Viewer\nThe way in which data are loaded for each module has changed in the PAMGuard viewer. In the scroll bar for each display, at the right hand end, there are buttons for pagingforward, backward and setting page length options.\nClick Detector Bearing Time display\nOlder versions used a vertical scroller in the right hand side of the main bearing time display to control the display length. This has been removed and replaced by a small control consisting of an edit box and a spinner (up and down arrows) at the right hand end of the horizontal scroll bar. The scroll system now also enabled you to scroll back through up to one minute of data during real time operation.\nWhistle and Moan Detector\nBearings are now written to the database.\nPAMGuard Viewer scrolling mechanism has changed.\nEach display now has a small control in the right hand end of a scroll bar or a slider which allows you to page through data. This is only well implemented for the map, but will be an increasingly important feature as more displays are set up for offline data viewing in future releases.\nViewer data map\nWhen using the PAMGuard viewer an additional panel will be displayed showing an overview of data quantity (per hour) from the various database tables connected to PAMGuard.\nSpectrogram Display overlays\nThe mechanism behind this has changed. Should not affect operations, but if you have problems with overlays on the spectrogram, please notify support@PAMGuard.org\nAll display overlays\nNow pick up line colours from the Display symbol manager, so it’s possible to set line colours by selecting a symbol with a particular line colour from the Display menu.\nDatabase\nDefault name for the Database module has changed from “ODBC Database” to just “Database”. This will not affect existing configurations.\nSound acquisition\nChanges made for a previous Mac build now incorporated into main Beta branch. This should allow for basic 2 channel sound acquisition using Macs.\nBug Fixes\nWhistle and Moan Detector\nWas not detecting sounds when noise reduction was performed in the Whistle Moan Detector, but was OK when noise reduction ran in the FFT module. This problem has been resolved.\nWhistle Classifier\nBug fix in database output. The first species probability column was setting to zero. This is now fixed\nIshmael Detectors\nBetter rendering of detection boxes on spectrogram display and more meaningful names in spectrogram display menu.\nSound acquisition\nWhen not using NI or AISO cards PAMAGUARD acquires sound using javax.sound which only supports two channels. Max number of channels now specified as 2 rather than undefined.\nSerial Comms\nA few changes so more through tidying up of resources when a port is closed. Might prevent a few problems when using a GPS."
  },
  {
    "objectID": "releasenotes.html#version-1.8.01-beta-february-2010",
    "href": "releasenotes.html#version-1.8.01-beta-february-2010",
    "title": "Release Notes",
    "section": "Version 1.8.01 Beta February 2010",
    "text": "Version 1.8.01 Beta February 2010\nBug Fixes\nCrashes caused in real time or Mixed Mode if the number of software channels exceeds the number of hydrophones configured in the array manager. It is of course illogical to have software channels which are not assigned to a hydrophone, so rather than entirely prevent PAMGuard from crashing I have inserted additional checks into the hydrophone array dialog which will prevent the user from closing that dialog unless all software channels are assigned to a hydrophone."
  },
  {
    "objectID": "releasenotes.html#version-1.8.01-beta-february-2010-1",
    "href": "releasenotes.html#version-1.8.01-beta-february-2010-1",
    "title": "Release Notes",
    "section": "Version 1.8.01 Beta February 2010",
    "text": "Version 1.8.01 Beta February 2010\nNew features\n’         Play back of high frequency wav files through National Instruments (NI) cards: When analysing wav files, sound can be output at high frequency (depending on the specification of the NI card). The primary motivation for this has been to develop a test bed for high frequency sound acquisition whereby we can play 500kHz recordings of harbour porpoise out of an NI card on one machine, into NI cards on a different machine which are testing high frequency versions of the click detector.\n’         Note that this does not (yet) permit simultaneous acquisition and playback through\n’         NI data acquisition cards.\nMinor features and bug fixes\n’         Synchronisation of FFT functions. Prevents threads accessing the same FFT module simultaneously which was occasionally causing crashes of the click detector if multiple hydrophone groups were being used.\n’         Pop up menus on click detector displays: some of these were not displaying correctly when running under Linux. This has been fixed. \nBug fixes\n’         patch panel can now output channels which are not in it’s input list.\n’         Null pointer trapped in Ishmael spectrogram correlation module.\n’         False buffer overflows at low sample rates stopped (size of data in individual data blocks had been increased at low sample rates, but when this exceeded 3s a false buffer overflow would occur)."
  },
  {
    "objectID": "releasenotes.html#version-1.8.00-beta-january-2010",
    "href": "releasenotes.html#version-1.8.00-beta-january-2010",
    "title": "Release Notes",
    "section": "Version 1.8.00 Beta January 2010",
    "text": "Version 1.8.00 Beta January 2010\nNew features\n’         Major changes to the multi-threading model in PAMGuard.\n’         This results in a major speed up of data exchange between modules and can lead to a x4 improvement in overall performance.\n’         Additional speed improvements have been made to the click detector which results in an approximate 30% speed improvement for that one module.\n’         Sound playback when monitoring using a sound card (previously only possible with ASIO sound cards) but see warning in help file about sound card synchronisation.\n’         Wigner time-frequency plot for the click detector. Clicks are NOT automatically displayed in the Winger window as they are for the waveform and spectrum windows since the Wigner transformation is very time consuming. Clicks will be displayed if you select them with the mouse.\n’         New click classifier methods, which include extraction of frequency sweep parameters. (Please note that this click is not yet documented. The old classifier is still available).\n’         Bearing ambiguity resolution for planar and volumetric arrays. New features in array dialog for estimations of errors on array location. These feed into to a maximum likelihood estimate of angles from small 2D or 3D sub arrays to give two polar angle coordinates. this can be used to resolve left right ambiguity and is implemented for both the click and the whistle/moan detectors. As a result, the click detector bearing time display can now be set to go from -180 to 180 degrees rather than 0 - 180 degrees. In this case, clicks in the upper half of the bearing display will be to port and clicks in the right half will be to starboard. As you pass a whale which is to port, the clicks will move UP the display. In the long term, I hope to turn this display around so that time is up the screen rather than across. \nSmall features and bug fixes\n’         Checks on Recordings and Clicks output folders before PAMGuard starts.\n’         Colours in spectrogram amplitude display correctly match the user selection.\n’         Default parameters in the radar display are for quiet clicks to be shown further away.\n’         Ishmael spectrogram correlation module checks for kernel creation and no longer crashes if the kernel is not present."
  },
  {
    "objectID": "releasenotes.html#version-1.7.02-beta-november-2009",
    "href": "releasenotes.html#version-1.7.02-beta-november-2009",
    "title": "Release Notes",
    "section": "Version 1.7.02 Beta November 2009",
    "text": "Version 1.7.02 Beta November 2009\nBug Fixes.\nAirgun display occasionally crashing with a class cast exception is fixed.\nFFT modules, new code in 1.7.00 for interleaving FFT blocks from multiple channels now no longer crashes."
  },
  {
    "objectID": "releasenotes.html#version-1.7.00-beta-october-2009",
    "href": "releasenotes.html#version-1.7.00-beta-october-2009",
    "title": "Release Notes",
    "section": "Version 1.7.00 Beta October 2009",
    "text": "Version 1.7.00 Beta October 2009\nBug fix. Spectrogram time and frequency scales now display correctly and amplitude scale updates after scale parameter changes.\nSpeed improvement.\nPAMGAURD FFT calculations now use the JTransforms FFT library which gives a factor 2 speed improvement compared to previous FFT methods used in PAMGuard\nNew Modules\nTwo new modules are packaged. These are still in the final stages of development. Feedback is most welcome. See online help for further details.\nWhistle and Moan Detector\nWhistle Classifier."
  },
  {
    "objectID": "releasenotes.html#version-1.6.00-beta",
    "href": "releasenotes.html#version-1.6.00-beta",
    "title": "Release Notes",
    "section": "Version 1.6.00 Beta",
    "text": "Version 1.6.00 Beta\nIdentical to Core release 1.6.00 apart from additional modules:\n’         Patch panel - unstable and requires documentation\n’         Angle Measurement (for binocular stands) - requires documentation\n’         Fixed landmarks - requires documentation.\nBug fixes since release 1.5.01\n’         Channel lists in output data streams of Decimator and other modules fixed, so that when channel numbers change, downstream modules configurations get the correct list of available channels.\n’         GPS data from the GPGGA string are now correctly unpacked (formerly, there was a bug in how times were unpacked between 1200 and 2400 GMT).\n’         Fixed NMEA dialog problems when no COM ports detected.  \nNew Modules / Features (see help file for details)\n’         Aural monitoring form. Module for input of data on when you’re listening and what you hear. Fully user configurable list of species. See help file for more details.\n’         Simulated sound sources. New sound source simulator. Accessible from within the main data acquisition dialog. The old simulator didn’t work well and has been deleted.\n’         Copying and Printing\n’         New menu functionality by right clicking on any of the tabs of the main tab control will allow the user to copy the tab contents to the system clipboard from where it can be copied into other programs (e.g. Word, Powerpoint, etc.).Some modules, such as the map, have this implemented in other menus (right click) and also allow printing. \n’         Installer now checks for previous versions of PAMGuard and uninstalls them before proceeding with installation.\n’         Installer now setting permissions on some of the default settings files so that under Vista they can still be written to without needed to be an Administrator\n’         When running the *.exe launchers on a 64 bit version of Windows they now perform a check as to whether a 32bit JVM is available. (Until 64bit versions of all the relevant shared libraries are available a 32bit JVM is still required to get access to the full functionality of PAMGuard)"
  },
  {
    "objectID": "releasenotes.html#version-1.5.01-beta",
    "href": "releasenotes.html#version-1.5.01-beta",
    "title": "Release Notes",
    "section": "Version 1.5.01 Beta",
    "text": "Version 1.5.01 Beta\nBug fix. Channel number checking for ASIO cards changed during NI support function and will always throw an error in 1.5.00. This has now been fixed."
  },
  {
    "objectID": "releasenotes.html#version-1.5.00-beta---ni-support",
    "href": "releasenotes.html#version-1.5.00-beta---ni-support",
    "title": "Release Notes",
    "section": "Version 1.5.00 Beta - NI Support",
    "text": "Version 1.5.00 Beta - NI Support\nBug Fixes\nDecimator was calculating incorrect filter coefficients (coefficients were based on the output sample rate, not the input sample rate, so it’s likely that actual filtering of data was minimal). This is now rectified. Ishmael matched filter. Would crash if template file not correctly loaded. Now issues a warning message to the terminal and does not crash.\nSpelling correction on user input form (Sumbit - Submit)\nNew Features\nNational Instruments DAQ support (Windows 32 bit JVM Only)\nThe National Instruments interface has now been comprehensively rewritten and is now stable. One or more NI data acquisition devices can be used to acquire high speed data on multiple channels. See the PAMGuard help file for details.\nPerformance Tests\nA new menu item in the Help menu provides access to some system performance tests. These are still under development but have been released to Beta at the earliest opportunity since the development team require feedback of test results verses performance on a variety of machines before the tests and the  corresponding help files can be finalised."
  },
  {
    "objectID": "releasenotes.html#version-1.4.00-beta-june-2009",
    "href": "releasenotes.html#version-1.4.00-beta-june-2009",
    "title": "Release Notes",
    "section": "Version 1.4.00 Beta June 2009",
    "text": "Version 1.4.00 Beta June 2009\nNew Features\nDetails of new features are documented in the PAMGuard online help.\nPAMGuard Viewer\nReloads data from a PAMGuard output database for viewing\nPAMGuard Mixed Mode operation\nAnalyses data from wav or AIF file and synchronises it with GPS data reloaded from a database so that detected sounds may be correctly localised. Multiple display frames - enables PAMGuard GUI to be split into multiple display windows, displayed on multiple monitors if desired. Enables the operator to simultaneously view the map and the click detector for example, which is much  easier than continually moving between multiple tabs.\nDocumentation\nThe help file pages for the acquisition module have undergone major revision Minor additions and edits have been made to many other help pages\nBug Fixes\nMemory leak caused by Night / Day colour manager now fixed. This would cause memory leaks when multiple files were being analysed off-line and would eventually crash PAMGuard. The way that colours are managed in PAMGuard has been rewritten. \nSome issues with Swing fixed that might have been causing hang ups on startup especially on Macs/Linux machines\n Some tidying up of events and default ports for serial devices to improve GPS data collection (particularly for USB-Serial GPS on Mac/Linux machines)\nClick Detector\nParameters dialog shows correct channel numbers\nClick classifier mean filter option had a computational error which meant that classifiers using this option would not work. This has now been fixed.\nSound Recorder\nLevel meters are shown for the correct channels (after channel numbering has been changed). Occasional crash due to synchronisation problems when  multi-threading now fixed.\nWhistle Detector\nCorrectly triggers recordings when whistle events are detected\nSound Playback through ASIO sound cards Will now work with any selected channels (not just channels 0 and 1)"
  },
  {
    "objectID": "releasenotes.html#version-1.3.03-beta-march-2009",
    "href": "releasenotes.html#version-1.3.03-beta-march-2009",
    "title": "Release Notes",
    "section": "Version 1.3.03 Beta March 2009",
    "text": "Version 1.3.03 Beta March 2009\nBug fix. ASIO sound cards reporting errors if a channel list that is not 0,1,2 is used. This has been corrected so no false error messages are sent."
  },
  {
    "objectID": "releasenotes.html#beta.-february-2009",
    "href": "releasenotes.html#beta.-february-2009",
    "title": "Release Notes",
    "section": "1.3.02 Beta. February 2009",
    "text": "1.3.02 Beta. February 2009\nBeta release 1.3.02 is identical to Core release 1.3.00 apart from\nsome modules which are known to be unstable or are new or under development.\nModules which have only been included in the Beta release are:\nUtilities Group\nSimulator (unstable)\nHydrophone Depth Readout (requires further testing and help file)\nSound Processing Group\nPatch Panel (unstable and requires help file)\nSeismic Veto (requires help file and minor bug fixing)\nVisual Methods Group\nAngle Measurement (requires further testing and help file)\nVideo Range (requires help file)\nFixed Landmarks (requires help file)\nChanges\nThe User Input module (for text entry of information by the user) has been moved from the Displays sub menu of the Add Modules menu, to Utilities. This will not affect how existing settings files are loaded.\nMulti-screen environments.\nIn previous versions, if PAMGuard was configured in a multiscreen environment and is then run on a single screen, it was possible that the display would not appear. PAMGuard now checks screen dimensions at start up and ensures that the main display is visible. Consequently, program start-up takes slightly longer than previously.\nOutstanding bugs\nThe patch panel is known to crash if output channel numbers from the patch panel a higher than the highest input channel number of the data acquisition. \nBug fixes\nSpeed up of graphics, particularly regarding large quantities of gps track  data\nNational Instruments cards with names &gt; 20 characters long are now correctly  recognised.\nHelp File Updates\nThe help viewer has been debugged and table of contents, search and index features now all work as they should.\nThe layout of the help content has been re-ordered into more functional groups (as laid out in the PAMGuard add modules menu).\nImproved help has been added for the following modules:\n’         NMEA and GPS connections.\n’         Map Display\n’         Hydrophone Array Manager\n’         New help sections have been written for\n’         The model viewer\n’         Multithreading\n’         Map Overlays\n’         AIS\n’         User Input\n’         Airgun display\n’         Sound Recorder\n’         Spectrogram Smoothing"
  },
  {
    "objectID": "releasenotes.html#beta.-january-27-2009",
    "href": "releasenotes.html#beta.-january-27-2009",
    "title": "Release Notes",
    "section": "1.3.01 Beta. January 27 2009",
    "text": "1.3.01 Beta. January 27 2009\nBug Fixes\nFixed bug in serial port communication which caused crash is a serial port\ndidn’t exist."
  },
  {
    "objectID": "releasenotes.html#beta.-december-2008",
    "href": "releasenotes.html#beta.-december-2008",
    "title": "Release Notes",
    "section": "1.2.01 Beta. December 2008",
    "text": "1.2.01 Beta. December 2008\nBug fix in whistle detector bearing calculation.\n1.3.00 Beta. January 2009\nNew modules\nNew Likelihood detector.\nThe likelihood detector module is an implementation of a likelihood ratio test with flexible algorithms and configuration to estimate likelihood. It is\nsuitable for detecting both short duration Odontocete clicks (Sperm, Beaked, etc.) as well as moderate duration Mysticete calls (Humpback, Bowhead, etc.).It is not suitable for detecting whistles.\nNote that the likelihood detector will not run with PAMGuard in multithreading mode.\nBug fixes\nClick Detector - click train detector. Further synchronisation to deal with multithreading.\nDepth Readout - Bug fix to prevent crash when dialog is opened when no input device is installed.\nLocaliser ’ Further synchronisation of detection group localiser (affects stability of click train localiser and whistle localiser in\nmultithread operation)."
  },
  {
    "objectID": "releasenotes.html#beta-december-2008",
    "href": "releasenotes.html#beta-december-2008",
    "title": "Release Notes",
    "section": "1.2.0 Beta December 2008",
    "text": "1.2.0 Beta December 2008\nThis release contains many bug fixes from the PAMGuard industry field trial which took place in the Gulf of Mexico on the RV New Venture in November 2008.\nBug Fixes\n’         Map. Full drawing of map base (contours & grid lines) when window is resized.\n’         Click Detector. Display and detection continue after click detection parameter changes\n’         ASIO Sound acquisition. Was not returning channels in correct order.  Now fixed.\n’         National Instruments sound acquisition. An NI interface has now been written  for Windows.\n’         NMEA, AIS and GPS modules. No longer crash in response to incomplete  NMEA strings\n’         Spectrum display (plug in module for spectrogram). Now correctly saves  settings between runs.\n’         Dialogs (all modules). Have improved scaling and packing of dialogs when channels or textual content change.\n’         Model viewer. Have stopped it from jumping on top of the main PAMGuard  display when dialogs are closed.\n’         General problems with timing solved (sound cards not always running at the speed they should run at). Large improvements in overall PAMGuard reliability.\n’         Airgun display is now correctly updating using either GPS or AIS data.\nOutstanding bugs\n’         National Instruments sound acquisition. Hangs occasionally. Requires restart  of PAMGuard to get going again.\n’         Click Detector. Click train detector uses a lot of memory and can cause out of memory errors.\n’         Ishmael spectrogram plug in graphics occasionally disappear when detection parameters are adjusted.\n’         The vertical scale on the raw data plug in display is incorrect.\n’         Sound recorder. 1/10 of a second of data are occasionally lost when the  recorder stops and restarts with a new file.\nNew Features in existing modules\n’         Window state remembered on shut down and window restored to same size  on start-up\n’         Show modules with no processes in viewer. This allows them to be renamed\n’         Better drawing of held spectrogram when putting mark rectangles on a spectrogram display. All panels are now correctly frozen. The rectangle is drawn in red on the marked panel and in green on other panels.\n‘         Spectrogram. Frequency information displayed in a ’hover’ box when the mouse is moved over the display. Choice of colour maps for display.\n’         Sound playback. Now supported in ASIO sound cards, so you can have sound coming in through the ASIO card and back out through its headphone socket (after passing through PAMGuard filters and other modules) at the same time.\n’         Operation will depend on the configuration of individual sound cards and how they are configured to mix incoming data with data from the PC. This is sometimes a physical switch on the card and sometimes a software configuration utility specific to that sound card.\n’         NMEA/GPS Simulator has options that set the start location, the speed, course, random course changes and whether or not AIS data are output\n’         (AIS Data are a fixed data set recorded in the English Channel).\nMultithreading\nPAMGuard now processes data in each module in a different processing thread. This allows PAMGuard to use both processor cores on dual or multi core processor machines. However, multithreading may still cause instability in some modules. An option is therefore accessible from the main Detection menu to enable and disable multithreading.\nNew Modules\nThe following new modules have been added to the Beta Release 1.2.0\nSound Processing\n1. Seismic Veto. A module for detecting and then cutting out very loud sounds.\nUtilities\n2. Depth Readout. Readout for analogue depth sensors using MeasurementComputing data acquisition devices.\nVisual Methods\n3. Video Range measurement. Will not capture video, but can open jpeg, bitmap files, etc. or you can paste in an image for video range analysis.\n4. Angle Measurement. Shaft angle encoding using Autonnic Research Ltd A3030 Absolute Rotary Encoder (good for measuring the angle of binocular stands).\n5. Fixed Landmarks. Enter and display fixed points for overlay on the map."
  },
  {
    "objectID": "releasenotes.html#beta-28-july-2008",
    "href": "releasenotes.html#beta-28-july-2008",
    "title": "Release Notes",
    "section": "1.1.1 Beta 28 July 2008",
    "text": "1.1.1 Beta 28 July 2008\nNew Modules (not released to core)\n’         video range tracking\n’         shaft angle readout using FluxgateWorld shaft encoders (used by video range and beaked whale protocols)\n’         Beaked Whale Protocol (protocol to lay out randomised tracks around a point  located from shore)\n’         Seismic veto code to detect seismic pulses and then veto out that pulse from audio and spectrogram data streams\n’         whistle classifier Statistical species classification of whistle detector data.\n’         Land marks Fixed land marks to draw on map.\nUpdates\n’         Click detector angle vetoes (can remove all clicks from a given angle, or  sets of angles)\n’         Click detector pause scrolling to view individual click waveforms and spectra.\n’         Improved help and activation of help buttons on dialogs.\n’         Support for GPS GGA data\n’         Offline file analysis supports wider range of file name date formats\n’         Map has improved options to select what is drawn and how long overlays last for.\n’         User selectable symbols for many detectors drawing on the map.\nBug Fixes\n’         Look up table fix for unpacking of AIS data.\n’         Force English language Locale so that dialogs don’t get confused by number formats using “,” instead of “.”"
  },
  {
    "objectID": "releasenotes.html#beta-22-may-2008",
    "href": "releasenotes.html#beta-22-may-2008",
    "title": "Release Notes",
    "section": "1.1Beta 22 May 2008",
    "text": "1.1Beta 22 May 2008\n’         Asio Sound Card Multiple Channel Selection\n’         Viewer and Mixed mode operation\n’         Vessel Display\n’         Updated online help"
  },
  {
    "objectID": "releasenotes.html#b-31-august-2007",
    "href": "releasenotes.html#b-31-august-2007",
    "title": "Release Notes",
    "section": "0.5b    31 August 2007",
    "text": "0.5b    31 August 2007\nRequires Java 6 Update 2 (http://java.com/en/download/manual.jsp)\nMajor new features include:\n’         ASIO sound card support\n’         MS Access database access (up to Access 2003 verified)\n’         Configurations can be saved and re-called using settings files\n’         Module dependency wizard\n’         Air gun display\n’         AIS data interface/display\n’         Serial port support for NMEA data\n’         Spectra plugin display\n’         Static and “threading” hydrophone array configuration\n1.0Beta 22 Jan 2008 - PAMGuard starts two releases, core and beta release,\nthis is the beta release\n’         3D module\n’         Ishmael detection and localization methods\n’         Better display\n’         Multi animal click tracking with least squares fit calculation of position on map\n’         Whistle detector multi channel tracking and localisation.\n’         Sound playback\n’         Configuration storage to database\n’         Signal Patch Panel\n’         Default module naming and exclusive module naming\n’         Signal Amplifier\n’         IIRF (Butterworth and Chebychev) filters\n’         Offline file analysis\n’         Map (and other display) symbol keys\n’         Map Comments"
  },
  {
    "objectID": "releasenotes.html#b---29-december-2006-significant-enhancements",
    "href": "releasenotes.html#b---29-december-2006-significant-enhancements",
    "title": "Release Notes",
    "section": "0.4b - 29 December 2006, Significant enhancements",
    "text": "0.4b - 29 December 2006, Significant enhancements\nA model manager and profiler, whereby users can add/remove modules as required.\nModules now include configurable click and whistle detectors and Ishmael-type detectors and localisers.\nInformation from above modules can be displayed on configurable user displays which support real time scrolling spectrograms and radar displays. Detection and localisation information can be optionally displayed on the map display.Map enhancements include improved scrolling whereby the user can click and drag to pan the area. PAMGuard can now interface with MySQL database servers and users can easily select which information is logged. (This replaces the previous ‘flat-file’ logging feature). A simulation module allows virtual vocalising animals to be placed on the map to assist in training and development. Extensive online user help has been added to PAMGuard Application"
  },
  {
    "objectID": "releasenotes.html#b---first-version-used-in-a-real-at-sea-environment.180806",
    "href": "releasenotes.html#b---first-version-used-in-a-real-at-sea-environment.180806",
    "title": "Release Notes",
    "section": "0.03b - first version used in a real ‘at sea’ environment.18/08/06",
    "text": "0.03b - first version used in a real ‘at sea’ environment.18/08/06"
  },
  {
    "objectID": "releasenotes.html#a---first-version-with-significant-functionality.-16december05",
    "href": "releasenotes.html#a---first-version-with-significant-functionality.-16december05",
    "title": "Release Notes",
    "section": "0.02a - first version with significant functionality. 16/December/05",
    "text": "0.02a - first version with significant functionality. 16/December/05"
  },
  {
    "objectID": "releasenotes.html#a---first-public-release.-18august05.",
    "href": "releasenotes.html#a---first-public-release.-18august05.",
    "title": "Release Notes",
    "section": "0.01a - first public release. 18/August/05.",
    "text": "0.01a - first public release. 18/August/05."
  },
  {
    "objectID": "publications.html",
    "href": "publications.html",
    "title": "Publications",
    "section": "",
    "text": "Below are some recent publications from the PAMGuard team and other researchers in St Andrews that are either about PAMGuard or used PAMGuard to conduct research. Many more articles using PAMGuard can be found by searching Google Scholar.\n\nMotabaranom, J. et. al. Seals exhibit localised avoidance of operational tidal turbines. Journal of Applied Ecology, 2025.\nGarrobé, L, et. al. Comparing neural networks against click train detectors to reveal temporal trends in passive acoustic sperm whale detections. J. Acoust. Soc. Am. 156, 4073–4084 (2024)\nGillespie, D. et al. Automated detection and tracking of marine mammals in the vicinity of tidal turbines using multibeam sonar. Journal of Marine Science and Engineering 11, 2095 (2023).\nWebber, T. et al. Streamlining analysis methods for large acoustic surveys using automatic detectors with operator validation. Methods in Ecology and Evolution 13, 1765–1777 (2022).\nMacaulay, J. D. J. et al. Implications of porpoise echolocation and dive behaviour on passive acoustic monitoring. The Journal of the Acoustical Society of America 154, 1982–1995 (2023).\nBrinkløv, S. M. M. et al. Open‐source workflow approaches to passive acoustic monitoring of bats. Methods Ecol Evol 14, 1747–1763 (2023).\nMacaulay, J. et al. Passive acoustic tracking of the three-dimensional movements and acoustic behaviour of toothed whales in close proximity to static nets. Methods in Ecology and Evolution In Press, (2022).\nPalmer, L. et al. Harbour porpoise (Phocoena phocoena) presence is reduced during tidal turbine operation. Aquatic Conservation: Marine and Freshwater Ecosystems (2021).\nGillespie, D., Palmer, L., Macaulay, J., Sparling, C. & Hastie, G. Harbour porpoises exhibit localized evasion of a tidal turbine. Aquatic Conservation: Marine and Freshwater Ecosystems (2021).\nGillespie, D., Palmer, L., Macaulay, J., Sparling, C. & Hastie, G. Passive acoustic methods for tracking the 3D movements of small cetaceans around marine structures. PLoS ONE 15 (5), 16pp (2020)."
  },
  {
    "objectID": "plugins/visangles.html",
    "href": "plugins/visangles.html",
    "title": "Visual to Array Angles",
    "section": "",
    "text": "Converts visual angle and range estimates from observers at the front of a vessel to an estimate of the angle and range from a hydrophone array some distance behind. Also works in reverse.\nIt’s a PAMGuard plugin, so to deploy, simply take the built jar file from the ‘releases’ and copy it to the plugins folder of your PAMGuard installation. The additional module will then appear in the Visual Methods section of the add modules menu.\nCalculated angles will be stored to the database and displayed on the map. Not that PG Verision 2.02.10 has a bug in the map display, so upgrade to a later version.\n\n\nSource Code\nBuilt Module"
  },
  {
    "objectID": "plugins/visangles.html#visual-angles",
    "href": "plugins/visangles.html#visual-angles",
    "title": "Visual to Array Angles",
    "section": "",
    "text": "Converts visual angle and range estimates from observers at the front of a vessel to an estimate of the angle and range from a hydrophone array some distance behind. Also works in reverse.\nIt’s a PAMGuard plugin, so to deploy, simply take the built jar file from the ‘releases’ and copy it to the plugins folder of your PAMGuard installation. The additional module will then appear in the Visual Methods section of the add modules menu.\nCalculated angles will be stored to the database and displayed on the map. Not that PG Verision 2.02.10 has a bug in the map display, so upgrade to a later version.\n\n\nSource Code\nBuilt Module"
  },
  {
    "objectID": "plugins/tritech.html",
    "href": "plugins/tritech.html",
    "title": "Tritech Sonar Processing",
    "section": "",
    "text": "Acquires and processed data in real time or from files from Tritech Gemini Multibeam Sonars 1. Acquire data directly from Tritech Gemini sonars 2. Run track detectors in real time on the sonar data 3. process data from Tritech GLF data files offline 4. view and annotate detection data using the PAMGuard viewer.\n\n\nDouglas Gillespie, Gordon Hastie, Jessica Montabaranom, Emma Longden, Katie Rapson, Anhelina Holoborodko, and Carol Sparling. “Automated detection and tracking of marine mammals in the vicinity of tidal turbines using multibeam sonar.” Journal of Marine Science and Engineering 11, no. 11 (2023): 2095.\n\n\n\nFor further information see the release notes on GitHub\nSource Code\nBuilt Module"
  },
  {
    "objectID": "plugins/tritech.html#tritech-sonar-processing",
    "href": "plugins/tritech.html#tritech-sonar-processing",
    "title": "Tritech Sonar Processing",
    "section": "",
    "text": "Acquires and processed data in real time or from files from Tritech Gemini Multibeam Sonars 1. Acquire data directly from Tritech Gemini sonars 2. Run track detectors in real time on the sonar data 3. process data from Tritech GLF data files offline 4. view and annotate detection data using the PAMGuard viewer.\n\n\nDouglas Gillespie, Gordon Hastie, Jessica Montabaranom, Emma Longden, Katie Rapson, Anhelina Holoborodko, and Carol Sparling. “Automated detection and tracking of marine mammals in the vicinity of tidal turbines using multibeam sonar.” Journal of Marine Science and Engineering 11, no. 11 (2023): 2095.\n\n\n\nFor further information see the release notes on GitHub\nSource Code\nBuilt Module"
  },
  {
    "objectID": "plugins/rioncompass.html",
    "href": "plugins/rioncompass.html",
    "title": "RION Compass",
    "section": "",
    "text": "Serial port readout of heading, pitch and roll from a RION HCM508 compass module.\n\n\nSource Code\nBuilt Module"
  },
  {
    "objectID": "plugins/rioncompass.html#rion-digital-comass",
    "href": "plugins/rioncompass.html#rion-digital-comass",
    "title": "RION Compass",
    "section": "",
    "text": "Serial port readout of heading, pitch and roll from a RION HCM508 compass module.\n\n\nSource Code\nBuilt Module"
  },
  {
    "objectID": "plugins/plugins.html",
    "href": "plugins/plugins.html",
    "title": "Plugin Downloads",
    "section": "",
    "text": "These are Plugin modules developed by the PAMGuard team, or hosted on our website. Other developers may distribute plugins from their own sites.\n\n\nUsually, a plugin is distributed in the form of a .jar file (that’s compiled Java, the language PAMGuard is written in). All you have to do is copy the file into the plugins folder in the PAMGuard installation directory (e.g. C:\\Program Files\\Pamguard\\plugins for most installation). In some cases, you may need to add other files, for example some additional C libraries. In this case check any instructions distributed with the plugin.\nWe attempt to ensure that these plugins remain compatible with the latest released version of PAMGuard."
  },
  {
    "objectID": "plugins/plugins.html#available-plugin-modules",
    "href": "plugins/plugins.html#available-plugin-modules",
    "title": "Plugin Downloads",
    "section": "",
    "text": "These are Plugin modules developed by the PAMGuard team, or hosted on our website. Other developers may distribute plugins from their own sites.\n\n\nUsually, a plugin is distributed in the form of a .jar file (that’s compiled Java, the language PAMGuard is written in). All you have to do is copy the file into the plugins folder in the PAMGuard installation directory (e.g. C:\\Program Files\\Pamguard\\plugins for most installation). In some cases, you may need to add other files, for example some additional C libraries. In this case check any instructions distributed with the plugin.\nWe attempt to ensure that these plugins remain compatible with the latest released version of PAMGuard."
  },
  {
    "objectID": "plugins/contactcollator.html",
    "href": "plugins/contactcollator.html",
    "title": "Contact Collator",
    "section": "",
    "text": "The Contact Collator module is designed to provide a common output from multiple detectors and classifiers and to provide a “one-stop” data stream summarising recent detector activity. It can be configured to take input from multiple detectors and apply data selection to those data, for example to select different types of click events from the click detector or the click train detector. When a threshold number of detections occur for within a user defined time frame, new “Contact” data are output for that detection stream.\nSource Code\nBuilt Module"
  },
  {
    "objectID": "plugins/contactcollator.html#contact-collator",
    "href": "plugins/contactcollator.html#contact-collator",
    "title": "Contact Collator",
    "section": "",
    "text": "The Contact Collator module is designed to provide a common output from multiple detectors and classifiers and to provide a “one-stop” data stream summarising recent detector activity. It can be configured to take input from multiple detectors and apply data selection to those data, for example to select different types of click events from the click detector or the click train detector. When a threshold number of detections occur for within a user defined time frame, new “Contact” data are output for that detection stream.\nSource Code\nBuilt Module"
  },
  {
    "objectID": "pluginmodules.html",
    "href": "pluginmodules.html",
    "title": "Plugin PAMGuard Modules",
    "section": "",
    "text": "Read here for information about PAMGuard’s modular architecture.\nMost of the modules, that most users will ever want to use, are included in the core modules which are built into PAMGuard and are available in all installations.\nAs well as the core modules, there are also plugin modules that you can add to an existing PAMGuard installation. Once added, they behave the same way as the core modules.\nSometimes, modules are developed as plugins, and if they are useful and likely to benefit many users, we’ll add them to the core.\nThere are several reasons why people may want to create or use plugin modules:\n\nDevelopers can make a module and distribute it to users without having to get approval in any form from the PAMGuard team.\nBy distributing the module themselves, it’s easier for them to get credit for their work where credit is due.\nThe module may be experimental, untested, and certainly doesn’t have any help, so we don’t particularly want it in the main release since it won’t make users happy.\nThe module may have such niche functionality that no one will want to use it and it just clutters the PAMGuard menus.\nAll of the above\n\nDownload Plugin Modules"
  },
  {
    "objectID": "news/241214_bluesky.html",
    "href": "news/241214_bluesky.html",
    "title": "BlueSky",
    "section": "",
    "text": "PAMGuard now has it’s own BlueSky account which you can follow at https://bsky.app/profile/pamguard.org.\n\nPlease tag @pamguard.org if you’re posting about work that used our software."
  },
  {
    "objectID": "news/241208_batchprocessor.html",
    "href": "news/241208_batchprocessor.html",
    "title": "Batch Processing",
    "section": "",
    "text": "The PAMGuard batch processing module V1.6 is now available for download on our plugins pages.\nThe Batch Processing module can be used to run the same configuration file on multiple datasets using the same psfx file without having to go into the configuration for every dataset to change the location of the source files, the output database name, and the location of the binary store.\nIt is particularly useful for processing datasets from deployments of multiple autonomous recorders, but also has application in reprocessing of any data where you want to run the same PAMGuard algorithms on multiple sets of data.\nThe batch processing module is one of three major developments currently being funded by the US Bureau of Oceans Energy Management (BOEM):\n\nAn Interface to the Tethys database for Passive Acoustic metadata\nA PAMGuard module which allows you to run Deep Learning classifiers within PAMGuard\nThe Batch Processor module."
  },
  {
    "objectID": "news/240108_Montabaranom.html",
    "href": "news/240108_Montabaranom.html",
    "title": "Montabaranom et al. 2025",
    "section": "",
    "text": "Another paper using PAMGuard. For this one, we took a break from Passive Acoustics and developed a plugin module which can process data from Tritech multibeam sonars to track seals around a tidal turbine.\n\nhttps://doi.org/10.1111/1365-2664.14844\nSeals exhibit localised avoidance of operational tidal turbines\nJessica Montabaranom, Douglas Gillespie, Emma Longden, Katie Rapson, Anhelina Holoborodko, Carol Sparling, Gordon Hastie\nABSTRACT\n\nTidally energetic habitats are used by a range of marine mammals, including pinnipeds. These areas are also important to the tidal energy industry, leading to an overlap between tidal developments and important habitats used by seals. The concerns around negative ecological impacts from tidal turbines derive primarily from the potential for fatal collisions between animals and the moving parts of the turbine (i.e. blades) and habitat exclusion from important areas.\nWe quantified the number of encounters of seals within close range (10s of metres) of the turbine and estimated the likelihood of seal presence over an annual cycle. Data were collected with two multibeam sonars monitoring an operational turbine in the Pentland Firth, Scotland, between May 2022 and June 2023. There were 704 seal encounters within close range of the turbine.\nWe used generalised additive models (GAMs) to investigate the temporal patterns of seal presence at the turbine site. Results showed that the probability of seal presence was significantly higher at slack water, at night and during the winter months (November–January: mean of ~4 seals a day). When comparing seal presence between periods of turbine operation and non-operation, the model predicted a decrease in presence during turbine operation in flow speeds of ≥2.3 ms−1 (mean reduction of 77% at the highest flow speed; 95% CI: 22%–93%).\nSynthesis and applications. The result showing that seals exhibit avoidance of the turbine during operation is important for industry developers and regulators, as lower numbers of seals close to the turbine reduces the potential for fatal collisions and injuries. The modelled reductions in presence can be used directly as avoidance rates in collision risk models to predict the impacts of future turbine arrays and de-risk the consenting process for this industry."
  },
  {
    "objectID": "links/ngos.html",
    "href": "links/ngos.html",
    "title": "Non Government Organisations (NGOs) with interests in marine mammals and noise",
    "section": "",
    "text": "Friends of the EarthGreenpeaceHebridean Whale and Dolphin TrustInternational Fund for Animal Welfare\n\n\nMarine Conservation ResearchNatural Resources Defence CouncilWhale and Dolphin Conservation SocietyWorld Wide Fund For Nature (World Wildlife Fund)"
  },
  {
    "objectID": "license.html",
    "href": "license.html",
    "title": "License",
    "section": "",
    "text": "PAMGuard source code and built executables are available under the GNU GPL3 Open Souce software License from the Free Software Foundation.\nThe GPLv3 licence gives you four important freedoms:\n\nthe freedom to use the software for any purpose,\nthe freedom to change the software to suit your needs,\nthe freedom to share the software with your friends and neighbors, and\nthe freedom to share the changes you make.\n\nRead a Quick Guide to GPLv3 here for more information."
  },
  {
    "objectID": "funding.html",
    "href": "funding.html",
    "title": "Funding",
    "section": "",
    "text": "Initial funding for the PAMGuard project came from the International Association of Geophysical Contractors Sound and Marine Life Joint Industry Programme\nFunding for more recent developments has come from a wide variety of sources including governments, other research organisations, offshore renewable energy companies, and NGO’s.\nMany developments such as the Tritech multibeam sonar module, and the latest ROCCA Classifiers, occur because we need those developments to fulfill our own research goals.\nWhile these mechanisms fund some of the developments, they do not pay for time we spend on user support, dealing with bugs, managing new releases and updating this website.\nIn 2016 we set up a system of voluntary contributions, whereby users within the offshore industry (oil and gas, renewables) would pay a contribution to PAMGuard of US$5 per day.\nWe are now setting up a much simpler system whereby companies can easily donate to PAMGuard through the Universities Science and Medicine donation form (please ensure you select PAMGuard from the list of funding designations!).\n\nHow we’ll spend the money\nSubject to having enough funds to employ a new programmer / assistant, important areas we want to work on in the coming 12 months are\n\nContinued user support\nImprovement in pre-release testing\nUpdated user tutorials\nNew Installers for Windows ARM Processors\nBetter support for Mac computers, including real time processing\nFurther updates to this website"
  },
  {
    "objectID": "featurepanels/realtime.html",
    "href": "featurepanels/realtime.html",
    "title": "Real Time Monitoring",
    "section": "",
    "text": "Real time tracking of sperm whales at sea\n\n\nPAMGuard can process data in real time using a wide range of Detection, Classification, and Localisation algorithms, combined with sophisticated user displays.\nIt is widely used on vessels of many sizes, from tiny vessels with a laptop in a small waterproof case, to large ships.\nData input can come from a wide range of devices, from a simple computer sound card, to specialist high frequency data acquisition systems.\nRead in this research article how we built a system that was used to monitor twelve high frequency hydrophones at a sample rate of 500kHz for over a year.\nNext: Read about data visualisation"
  },
  {
    "objectID": "featurepanels/opensource.html",
    "href": "featurepanels/opensource.html",
    "title": "Open Source Software",
    "section": "",
    "text": "Our code is all on GitHub where it can freely accessed\n\n\nWe’re proud of what we do and are quite happy for you to access all of the PAMGuard source code. Not only can you see exactly how our algorithms work, but you’re free to modify and improve them and to then distribute modified versions.\nPAMGuard is available under the GNU GPL3 Open Souce software License.\nIf you want to know more about open source, and why it’s important read this blog post from the Alan Turing Institute.\nPrevious: Read about data visualisation"
  },
  {
    "objectID": "featurepanels/automatedalgorithms.html",
    "href": "featurepanels/automatedalgorithms.html",
    "title": "Automated analysis",
    "section": "",
    "text": "The click detector detecting transient sounds and porpoise clicks\n\n\n\n\n\n\n\nPAMGuard tracing whistles on a spectrgram\n\n\n\n\n\n\n\nUsing an AI model to detect right whale calls\n\n\n\n\n\n\n\nGPL detector detecting baleen whale calls\n\n\n\n\nPAMGuard provides a suite of automated algorithms which allow users to process acoustic data for target species/sounds. Detectors range from simple in-band energy based detectors (e..g Generalized Power Law (GPL) Detector and Click Detector) to tracking algorithms to extract tonal sounds (e.g. Whistle and Moan detector) and the latest AI based approaches (e.g. deep learning module).\nEach detector cna be tuned to the users specific needs and output data are saved to PAMGuard data management system for additional processing inside or outside PAMGuard. They also all integrate with PAMGuard visulisation tools allowing users to explore and valisate result. The approach of PAMGuard is to provide the tools to locate interesting sections of data and create an analysis workflow that suites a particular project. This might eb runnning one of the simple detection algorithms and then manually validating all results or using a sophisticated deep learning model and checking sub samples of a large dataset - it’s up to the user to decide.\nNext: Read about data visualisation\nPrevious: Read about using AI"
  },
  {
    "objectID": "devplugins.html",
    "href": "devplugins.html",
    "title": "Creating Plugin Modules",
    "section": "",
    "text": "There are two types of PAMGuard module. Core modules which are built into the main PAMGuard code and Plugin modules which are distributed sparately. This page tells you how to prepare a Plugin modules for PAMGuard.\nBefore reading this page, make sure you’ve read up on how to develop a core module"
  },
  {
    "objectID": "devplugins.html#writing-pamguard-plug-ins",
    "href": "devplugins.html#writing-pamguard-plug-ins",
    "title": "Creating Plugin Modules",
    "section": "Writing PAMGuard Plug-ins",
    "text": "Writing PAMGuard Plug-ins\nARCHIVING PLUG-INS INTO A JAR FILE FOR DISTRIBUTION\nEven if the plugin is intended as an External module, it is easiest to develop it as a Core module. In other words, create a new package in the PAMGuard code base to hold all of the new classes, and add a reference to the package classes in PamModel. This way, dependencies do not need to be explicitly managed and debugging is simplified. All development should be done within the new package, and the core PAMGuard classes should not be changed (if modifications are necessary, please contact the PAMGuard development team first).\nTo make an external PAMGuard plug-in available to PAMGuard users once development is complete, it is necessary to archive the class files and support files (including help files, graphics, sound files, etc.) into a java archive (jar) file.\nPrior to archiving, the developer must add a class to the project package which implements one of two interfaces: PamModel.PamPluginInterface (for standard plug-in modules) or Acquisition.DaqSystemInterface (for data acquisition modules such as sound cards, file streams, etc.). Override all of the Interface’s inherited methods, returning appropriate values as specified in the Javadoc comments. Create a String object to hold the jar file name. This parameter does not need to be initialized to anything specific; the value will be set by PAMGuard via the inherited setter method. The code could be as simple as\nString jarFile; \n@Override public void setJarFile(String jarFile) { \n  this.jarFile = jarFile; \n} \nIt is strongly recommended that help files be included with the plug-in. PAMGuard uses Oracle’s JavaHelp 2.0 system (complete details can be found here). Each page in the help file is an HTML document. Create individual HTML pages (with links and images) to describe the setup and operation of the plug-in, and save all files in the same package folder that your java program is in. Once the pages are completed, create the helpset and support files (map, TOC, index, etc.). Programs like jhelpdev can greatly simplify the process of creating these files.\n\nNotes:\nTo have the help files added to an existing category (i.e. Classifiers, Detectors, etc.) in the PAMGUARDhelp table of contents, the top-level tag text attribute in the plug-in’s TOC xml file must match the category name exactly. Some category names have a space character at the end. If in doubt, check the PAMGUARDTOC.xml file found in src/help for a list of the TOC entries. If the top-level tag text attribute in the plug-in’s TOC xml file does not match any of the category names in the table of contents, the item is simply appended to the bottom of the list. To match the existing table of contents look-and-feel, each tag in the plug-in’s TOC xml file should have image=”topic” added as an attribute. Copy the image.gif file found in src/help to the plug-in package folder. Ensure the line is in the plug-in’s map.jhm file\nSpecify the name of the helpset file in the plug-in interface class. Look through the interface Javadoc documentation for the correct format to use.\nFollow these steps to bundle all files together into a single jar, ready for distribution. Note the following are specific to the Eclipse IDE. Other IDE’s will have similar functionality:\nRight-click on the project name in the Package Explorer view and select Export In the Export window, click on the Java folder and highlight JAR file. Hit Next In the window frame on the left, make sure the package and all necessary subfolders are selected to export (sometimes subfolders created by JavaHelp - such as JavaHelpSearch – are not included in the export list by default). Click on the box beside “Export generated class files and resources” and “Export Java source files and resources”. Enter the name of the exported jar file in the text box under “Select the export destination”. You can click on the box beside “Compress the contents of the JAR file”, though this is optional. The default values for the remainder of the windows can be used. Hit Finish to export the package to the location specified.\nTo test the jar file, move it to the plugins subfolder in the PAMGuard installation folder. If there is no plugins folder, create one. When PAMGuard is started, it should find the jar file and use the information in the interface class to dynamically load the code. Remember to rename/delete the package in the PAMGuard code first, to ensure that you are really testing the jar file contents and not the original code.\nFinal note: if plug-in development has been done in the core PAMGuard code and then exported to a jar, the *.class files may still exist in the PAMGuard project’s bin subfolder (even if the original package has been deleted). If testing the plug-in jar in the IDE, first look through the bin subfolder and delete any plug-in* .class files that are stored. If PAMGuard finds the classes in both the bin folder and the jar file, it is unclear which would get loaded at runtime. The class files are replaced in the bin folder every time a build is completed. Also, remember to remove references to the new module from the PamModel class, as this will be taken care of by the jar file."
  },
  {
    "objectID": "deeplearning/deep_learning_troubleshoot.html",
    "href": "deeplearning/deep_learning_troubleshoot.html",
    "title": "Troubleshooting the deep learning module",
    "section": "",
    "text": "The deep learning module requires specific libraries to be downloaded, which are dependent on the type of computer you are using. Deep learning models must also be PAMGuard compatible.\n\n\n\nYou may receive a “deep learning engine failure” message. This is usually because the required libraries have not downloaded correctly. A more detailed explanation of how these libraries are used is available here. When you first use the module, PAMGuard attempts to download the relevant libraries, and if it cannot, you will receive the “Deep learning engine failure” message. Often, downloads are prevented by security settings or a lack of internet connection. One way to circumvent this is to manually download the libraries and place them in the correct folder.\nNote: We do not recommend this, but it is a last resort if your system cannot be modified to allow PAMGuard to download the files.\n\n\nDownload this zip and place the hidden .djl.ai folder in your user folder, e.g., C:\\Users\\me.\n\n\n\nDownload this zip and place the hidden .djl.ai folder in your user folder, e.g., /Users/me/.\n\n\n\n\nThis indicates that the model metadata has failed. Each model contains a .pgtf file, which contains JSON-formatted metadata on how to load the model—i.e., what the model needs to run. More information on how this works can be found in the help files. This error usually indicates that the JSON data is incorrect or the .pgdl file is not present at all.\nIf you have created your own model file for PAMGuard by zipping a .pgtf file with a deep learning model, this is most likely a user error. Check your JSON using a JSON validator, ensure you are following the JSON schema, and compare it against another .pgtf file. For example, here is the JSON for a right whale model by Shiu et al., 2019:\n{\n  \"framework_info\": {\"framework\": \"Bespoke\"},\n  \"model_info\": {\n    \"output_shape\": [\n      -1,\n      2\n    ],\n    \"input_shape\": [\n      -1,\n      40,\n      40,\n      1\n    ]\n  },\n  \"class_info\": {\n    \"name_class\": [\n      \"Noise\",\n      \"Right Whale\"\n    ],\n    \"num_class\": 2\n  },\n  \"transforms\": [\n    {\n      \"name\": \"load_audio\",\n      \"params\": {\"sr\": 2000}\n    },\n    {\n      \"name\": \"spectrogram\",\n      \"params\": {\n        \"fft\": 256,\n        \"hop\": 100\n      }\n    },\n    {\n      \"name\": \"freq_compression\",\n      \"params\": {\n        \"bins\": 40,\n        \"fmin\": 47,\n        \"fmax\": 357\n      }\n    },\n    {\n      \"name\": \"norm_row_sum\",\n      \"params\": {}\n    }\n  ],\n  \"description\": \"Metadata for acoustic deep learning\",\n  \"version_info\": {\"version\": 1},\n  \"seg_size\": {\"size_ms\": 2000}\n}\nIf you have used a Koogu, Ketos or AnimalSpot model or downloaded a model file from the PAMGuard website then this is likely a bug in PAMGuard or support issue. Please contact us with a bug report.\n\n\n\nThis indicates a more general error loading the model. Please contact us with a bug report.\n\n\n\nMost likely you have imported a configuration or moved the model file and PAMGuard can no longer find the file."
  },
  {
    "objectID": "deeplearning/deep_learning_troubleshoot.html#deep-learning-troubleshooting",
    "href": "deeplearning/deep_learning_troubleshoot.html#deep-learning-troubleshooting",
    "title": "Troubleshooting the deep learning module",
    "section": "",
    "text": "The deep learning module requires specific libraries to be downloaded, which are dependent on the type of computer you are using. Deep learning models must also be PAMGuard compatible.\n\n\n\nYou may receive a “deep learning engine failure” message. This is usually because the required libraries have not downloaded correctly. A more detailed explanation of how these libraries are used is available here. When you first use the module, PAMGuard attempts to download the relevant libraries, and if it cannot, you will receive the “Deep learning engine failure” message. Often, downloads are prevented by security settings or a lack of internet connection. One way to circumvent this is to manually download the libraries and place them in the correct folder.\nNote: We do not recommend this, but it is a last resort if your system cannot be modified to allow PAMGuard to download the files.\n\n\nDownload this zip and place the hidden .djl.ai folder in your user folder, e.g., C:\\Users\\me.\n\n\n\nDownload this zip and place the hidden .djl.ai folder in your user folder, e.g., /Users/me/.\n\n\n\n\nThis indicates that the model metadata has failed. Each model contains a .pgtf file, which contains JSON-formatted metadata on how to load the model—i.e., what the model needs to run. More information on how this works can be found in the help files. This error usually indicates that the JSON data is incorrect or the .pgdl file is not present at all.\nIf you have created your own model file for PAMGuard by zipping a .pgtf file with a deep learning model, this is most likely a user error. Check your JSON using a JSON validator, ensure you are following the JSON schema, and compare it against another .pgtf file. For example, here is the JSON for a right whale model by Shiu et al., 2019:\n{\n  \"framework_info\": {\"framework\": \"Bespoke\"},\n  \"model_info\": {\n    \"output_shape\": [\n      -1,\n      2\n    ],\n    \"input_shape\": [\n      -1,\n      40,\n      40,\n      1\n    ]\n  },\n  \"class_info\": {\n    \"name_class\": [\n      \"Noise\",\n      \"Right Whale\"\n    ],\n    \"num_class\": 2\n  },\n  \"transforms\": [\n    {\n      \"name\": \"load_audio\",\n      \"params\": {\"sr\": 2000}\n    },\n    {\n      \"name\": \"spectrogram\",\n      \"params\": {\n        \"fft\": 256,\n        \"hop\": 100\n      }\n    },\n    {\n      \"name\": \"freq_compression\",\n      \"params\": {\n        \"bins\": 40,\n        \"fmin\": 47,\n        \"fmax\": 357\n      }\n    },\n    {\n      \"name\": \"norm_row_sum\",\n      \"params\": {}\n    }\n  ],\n  \"description\": \"Metadata for acoustic deep learning\",\n  \"version_info\": {\"version\": 1},\n  \"seg_size\": {\"size_ms\": 2000}\n}\nIf you have used a Koogu, Ketos or AnimalSpot model or downloaded a model file from the PAMGuard website then this is likely a bug in PAMGuard or support issue. Please contact us with a bug report.\n\n\n\nThis indicates a more general error loading the model. Please contact us with a bug report.\n\n\n\nMost likely you have imported a configuration or moved the model file and PAMGuard can no longer find the file."
  },
  {
    "objectID": "contact.html",
    "href": "contact.html",
    "title": "Contact and Support",
    "section": "",
    "text": "To contact the PAMGuard team, please email pamguard@st-andrews.ac.uk"
  },
  {
    "objectID": "contact.html#help-and-support",
    "href": "contact.html#help-and-support",
    "title": "Contact and Support",
    "section": "Help and Support",
    "text": "Help and Support\nThere are several ways that you can get help with PAMGuard.\nThe Online Help is available on this site and is also all built into PAMGuard so it’s accessible even if you’re at sea and don’t have Internet. If you are having issues with the deep learning module, check out this additional troubleshooting section.\nThe User Tutorials are also an excellent way to familiarise yourself with PAMGuard. We’re hoping to expand these in the coming year.\nThere are also several providers of training courses in PAMGuard operation. Some of these are listed in our links pages, though please be aware that none of these providers are officially linked with the PAMGuard team.\nIf you’re an MMO running equipment provided by a third party that doesn’t seem to be working correctly, please contact the equipment provider.\nThere is also now a Bioacoustics section on Stack Exchange, which as a specific PAMGuard Section.\nIf you’ve still got a problem that can’t be answered using one of the methods above, then please get in touch."
  },
  {
    "objectID": "contact.html#bug-reporting",
    "href": "contact.html#bug-reporting",
    "title": "Contact and Support",
    "section": "Bug Reporting",
    "text": "Bug Reporting\nBug fixing is always a priority for the PAMGuard team. Known issues are listed on our GitHub pages here\nIf you think you’ve found a bug, please let us know by emailing support@pamguard.org including the following information.\n\nOperating system (Windows, Mac, etc.)\nPAMGuard version\nThe text from the command window (See below for more on this)\nAny information on what you were doing that creates the bug\nIf possible, include the psfx file you were using\n\n\nGetting the command window text\nPlease don’t send a screenshot of this. The information we need has usually scrolled off the visible window, so get us the full text using one of the following methods.\n\nWindows 10 or earlier\n\nRight click on the title bar\nSelect Edit &gt; Select All as per the picture below \nNow the text should be highlighted\nGo back to the Edit and select copy.\nPaste the text into an email, or save and attach to email.\n\n\n\nWindows 11\n\nHighlight text in the command window with the mouse\nRight click and select ‘copy’\nPaste into an email\n\n\n\nOr send the log file\nBy default, PAMGuard will be logging all of the information written to the command window in a log file in your user directory. This will be in a folder something along the lines of C:\\Users\\yourusername\\Pamguard.\nThe folder can be most easily accessed from the PAMGuard Help/Log File menu. Identify the correct file (note that times in the file names are in UTC) and either attach the file to an email, or copy the text into the body of an email to support@pamguard.org."
  },
  {
    "objectID": "configs/porpoise.html",
    "href": "configs/porpoise.html",
    "title": "Porpoise Click Detection",
    "section": "",
    "text": "PAMGuard Configuration\n\n\n\nPorpoise Click Detection\nA simple configuration for a boat based porpoise survey comprising modules to collect basic navigation data from GPS and a Click Detector setup to detect in the porpoise frequency range.\n\n\nUsage Notes\nNMEA Collection should be changed to your own source, at the moment it is simulated. If you are using a sound card with more than two channels, or other than the primary sound card, Sound Acquisition should be edited to reflect this.\nDownload Porpoise.psfx"
  },
  {
    "objectID": "configs/configs.html",
    "href": "configs/configs.html",
    "title": "PAMGuard Configuration files",
    "section": "",
    "text": "PAMGuard saves it’s configuration in special configuration files, ending in .psfx. Each file contains the list of modules and displays you’ve chosen to use and the settings for each module.\nA typical user may have many configuration files, set up for different purposes. Users often share configuration files and companies providing services such as acoustic observers to industry will typically provide the observers with the PAMGuard configuration they want them to use.\nHere we provide a sample of simple configuration files, that might help you get started.\nYou should also visit the tutorials pages which will show you how to build your own configurations.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nClicks and Whistles\n\n\nSimultaneous detection of sperm whale clicks and dolphin whistles\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDIFAR Localization\n\n\nLocalisation of low frequency tonal sounds using DIFAR sonobuoys\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPorpoise Click Detection\n\n\nA simple configuration for a boat based porpoise survey\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSperm Whale Detection\n\n\nSperm Whale click detection\n\n\n\n\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "casestudypanels/tidalturbinecasestudy.html",
    "href": "casestudypanels/tidalturbinecasestudy.html",
    "title": "PAMGuard and Tidal Turbines",
    "section": "",
    "text": "In 2017, an experimental array of four tidal turbines was deployed in northern Scotland by MeyGen. Tidal turbines have the potential to provide clean and predictable renewable energy, and could form an important part of our baseline energy requirements in the future. However, they were a relatively new technology, and very little was known about their potential effects on the environment.\nThere is concern that marine mammals might be injured by the turbine blades (Wilson et al, 2007) and so an experiment was devised to track the 3D underwater movements of dolphins and porpoises around one of the turbines. A 12-channel hydrophone array was mounted on the turbine foundation to allow us to acoustically localize and track vocalizing animals. This involved installing a compact cRIO computer from National Instruments directly on the turbine, which digitized the acoustic data from the hydrophones, compressed it, and then transmitted the data to shore via fiber optic cable.\n\n\n\n\n\nThe turbine foundation during deployment, showing hydrophone clusters (circles) and data acquisition system (diamond). Each cluster contained 4 closely spaced hydrophones (15cm spacing) with individual pre-amplifiers connected to the DAQ system which contained further signal conditioning and the cRIO data acquisition system.\n\n\n\n\n\n\n\nA diagram of the turbine and ability to localise. Each cluster of 4 hydrophones can determine a bearing to a porpoise or dolphin. If two or more clusters detect the same sound then the location of the animal is the point at which the bearings cross."
  },
  {
    "objectID": "casestudypanels/tidalturbinecasestudy.html#introduction",
    "href": "casestudypanels/tidalturbinecasestudy.html#introduction",
    "title": "PAMGuard and Tidal Turbines",
    "section": "",
    "text": "In 2017, an experimental array of four tidal turbines was deployed in northern Scotland by MeyGen. Tidal turbines have the potential to provide clean and predictable renewable energy, and could form an important part of our baseline energy requirements in the future. However, they were a relatively new technology, and very little was known about their potential effects on the environment.\nThere is concern that marine mammals might be injured by the turbine blades (Wilson et al, 2007) and so an experiment was devised to track the 3D underwater movements of dolphins and porpoises around one of the turbines. A 12-channel hydrophone array was mounted on the turbine foundation to allow us to acoustically localize and track vocalizing animals. This involved installing a compact cRIO computer from National Instruments directly on the turbine, which digitized the acoustic data from the hydrophones, compressed it, and then transmitted the data to shore via fiber optic cable.\n\n\n\n\n\nThe turbine foundation during deployment, showing hydrophone clusters (circles) and data acquisition system (diamond). Each cluster contained 4 closely spaced hydrophones (15cm spacing) with individual pre-amplifiers connected to the DAQ system which contained further signal conditioning and the cRIO data acquisition system.\n\n\n\n\n\n\n\nA diagram of the turbine and ability to localise. Each cluster of 4 hydrophones can determine a bearing to a porpoise or dolphin. If two or more clusters detect the same sound then the location of the animal is the point at which the bearings cross."
  },
  {
    "objectID": "casestudypanels/tidalturbinecasestudy.html#pamguard",
    "href": "casestudypanels/tidalturbinecasestudy.html#pamguard",
    "title": "PAMGuard and Tidal Turbines",
    "section": "PAMGuard",
    "text": "PAMGuard\nPAMGuard, running on a standard consumer desktop PC back on shore, processed the 12 channels of data in real-time, detecting potential echolocation clicks, running soundscape metrics such as octave noise bands and a long-term spectral average, detecting potential tonal sounds, and decimating the raw sound data, saving 48 kHz files. This meant that, although we did not save the raw high-frequency files, we had sound files for the most complex part of the soundscape (the lower frequencies) and detected high frequency transient sounds at a high false-positive rate, along with soundscape metrics for the higher frequencies. In this way, we were able to retain the interesting parts of the data but reduce our dataset to about one-tenth of what it would have been if we had saved the raw data.\n\n\n\nA diagram of the acoustic workflow used in the project. PAMGuard used automatic detectors and soundscape analysis to process data in real-time then saved the result to it’s data management system. This significantly reduced data volumes compared to saving raw high frequency wav files."
  },
  {
    "objectID": "casestudypanels/tidalturbinecasestudy.html#results",
    "href": "casestudypanels/tidalturbinecasestudy.html#results",
    "title": "PAMGuard and Tidal Turbines",
    "section": "Results",
    "text": "Results\nPAMGuard monitored continuously for almost two years, collecting a huge dataset that was then used to track the location of porpoises in close proximity to and within the wider surrounding area of the array. Ultimately, the experiment was able to demonstrate that:\n\nIt was practically feasible to deploy localizing arrays on tidal turbines (Gillespie et al., 2020).\nPorpoise presence was reduced by the operation of the turbine (Palmer et al., 2021).\nPorpoises avoided the immediate vicinity of the turbine rotor, so the risk of collision is low (Gillespie et al, 2021)."
  },
  {
    "objectID": "casestudypanels/tidalturbinecasestudy.html#conclusion",
    "href": "casestudypanels/tidalturbinecasestudy.html#conclusion",
    "title": "PAMGuard and Tidal Turbines",
    "section": "Conclusion",
    "text": "Conclusion\nPAMGuard’s real-time and post-processing capabilities were used to streamline data collection in a complex and data-intensive project, allowing us to develop a practical acoustic workflow and ultimately answer important conservation questions."
  },
  {
    "objectID": "casestudypanels/tidalturbinecasestudy.html#references",
    "href": "casestudypanels/tidalturbinecasestudy.html#references",
    "title": "PAMGuard and Tidal Turbines",
    "section": "References",
    "text": "References\nGillespie, D. et al. (2020) ‘Passive acoustic methods for tracking the 3D movements of small cetaceans around marine structures’, PLOS ONE. Edited by W.D. Halliday, 15(5), p. e0229058. Available at: https://doi.org/10.1371/journal.pone.0229058.\nGillespie, D. et al. (2021) ‘Harbour porpoises exhibit localized evasion of a tidal turbine’, Aquatic Conservation: Marine and Freshwater Ecosystems, 31(9), pp. 2459–2468. Available at: https://doi.org/10.1002/aqc.3660.\nPalmer, L. et al. (2021) ‘Harbour porpoise ( Phocoena phocoena ) presence is reduced during tidal turbine operation’, Aquatic Conservation: Marine and Freshwater Ecosystems, 31(12), pp. 3543–3553. Available at: https://doi.org/10.1002/aqc.3737.\nWilson, B. et al. (2007) Collision risks between marine renewable energy devices and mammals, fish and diving birds, Report to the Scottish Executive. Scottish Association for Marine Science."
  },
  {
    "objectID": "api/legal/jquery.html",
    "href": "api/legal/jquery.html",
    "title": "PAMGuard",
    "section": "",
    "text": "jQuery v 3.6.0\nCopyright OpenJS Foundation and other contributors, https://openjsf.org/\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n******************************************\n\nThe jQuery JavaScript Library v3.6.0 also includes Sizzle.js\n\nSizzle.js includes the following license:\n\nCopyright JS Foundation and other contributors, https://js.foundation/\n\nThis software consists of voluntary contributions made by many\nindividuals. For exact contribution history, see the revision history\navailable at https://github.com/jquery/sizzle\n\nThe following license applies to all parts of this software except as\ndocumented below:\n\n====\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n====\n\nAll files located in the node_modules and external directories are\nexternally maintained libraries used by this software which have their\nown licenses; we recommend you read them, as their terms may differ from\nthe terms above.\n\n*********************"
  },
  {
    "objectID": "api/legal/jquery.html#jquery-v3.6.0",
    "href": "api/legal/jquery.html#jquery-v3.6.0",
    "title": "PAMGuard",
    "section": "",
    "text": "jQuery v 3.6.0\nCopyright OpenJS Foundation and other contributors, https://openjsf.org/\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n******************************************\n\nThe jQuery JavaScript Library v3.6.0 also includes Sizzle.js\n\nSizzle.js includes the following license:\n\nCopyright JS Foundation and other contributors, https://js.foundation/\n\nThis software consists of voluntary contributions made by many\nindividuals. For exact contribution history, see the revision history\navailable at https://github.com/jquery/sizzle\n\nThe following license applies to all parts of this software except as\ndocumented below:\n\n====\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n====\n\nAll files located in the node_modules and external directories are\nexternally maintained libraries used by this software which have their\nown licenses; we recommend you read them, as their terms may differ from\nthe terms above.\n\n*********************"
  },
  {
    "objectID": "admin/downloadstats.html",
    "href": "admin/downloadstats.html",
    "title": "Download Stats",
    "section": "",
    "text": "Main program\n\n\nhttps://github.com/PAMGuard/PAMGuard/\n\n\nTutorials\n\n\nhttps://github.com/PAMGuardLearning/GettingStarted/\n\n\nDataset\n\n\nhttps://doi.org/10.5281/zenodo.13851130\n\n\n\nhhttps://github.com/PAMGuardLearning/Intro2Pamguard/\n\n\nDataset\n\n\nhttps://doi.org/10.5281/zenodo.13880212\n\n\n\nhttps://github.com/PAMGuardLearning/pamguard_tethys/\n\n\n\nPlugins\n\n\nhttps://github.com/douggillespie/PAMGuardBatch\n\n\n\nhttps://github.com/douggillespie/resourcemonitor\n\n\n\nhttps://github.com/douggillespie/VideoRange_Legacy/\n\n\n\nhttps://github.com/pamguard/SpermWhaleIPI/\n\n\n\nhttps://github.com/douggillespie/rioncompass/\n\n\n\nhttps://github.com/douggillespie/TritechAcquisitionPlugin/\n\n\n\nhttps://github.com/douggillespie/WAMS/\n\n\n\nhttps://github.com/douggillespie/ContactCollator/\n\n\n\nhttps://github.com/pamguard/VisualAngles/\n\n\n\nhttps://github.com/PAMGuard/PluginDemoDetector/\n\n\n\nClassifier Models\n\n\nhttps://github.com/PAMGuard/deeplearningmodels/\n\n\nZenodo\n\n\nhttps://doi.org/10.5281/zenodo.13378950\n\n\nhttps://doi.org/10.5281/zenodo.13626338\n\n End of download stats"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About PAMGuard",
    "section": "",
    "text": "Marine mammals, whales and dolphins in particular, are highly vocal. This means that it’s often easier to hear them, than it is to see them. This is particularly true at night or in poor weather."
  },
  {
    "objectID": "about.html#vision",
    "href": "about.html#vision",
    "title": "About PAMGuard",
    "section": "Vision",
    "text": "Vision\nThe PAMGuard project started in 2006, intending to address the fundamental limitations of existing cetacean passive acoustic monitoring (PAM) software by creating an integrated software infrastructure that is open source and available to all PAM users for the benefit of the marine environment.\nThe PAMGuard software provides a suite of Detection, Classification, and Localization algorithms developed specifically for the many types of sounds made by different species. The algorithms are backed up by a powerful user interface that allows a human operator to view sounds in real time, confirm the output of the automatic detectors, and mark out sounds manually when automatic detection is not possible."
  },
  {
    "objectID": "about.html#the-pamguard-name",
    "href": "about.html#the-pamguard-name",
    "title": "About PAMGuard",
    "section": "The PAMGuard name",
    "text": "The PAMGuard name\nPAMGuard stands for the Passive Acoustic Monitoring Guardianship"
  },
  {
    "objectID": "about.html#application",
    "href": "about.html#application",
    "title": "About PAMGuard",
    "section": "Application",
    "text": "Application\nPAMGuard can process data from hydrophones (under water microphones) in real time, or can process archived data stored in sound files.\nPAMGuard is widely used around the world for mitigation monitoring, density estimation surveys, and to find animals for visual studies, such as photo-id."
  },
  {
    "objectID": "about.html#its-not-just-about-whales",
    "href": "about.html#its-not-just-about-whales",
    "title": "About PAMGuard",
    "section": "It’s not just about whales",
    "text": "It’s not just about whales\nPAMGuard is also used to study terrestrial animals, including bats, birds, and gibbons."
  },
  {
    "objectID": "addmodules.html",
    "href": "addmodules.html",
    "title": "Adding Core Modules",
    "section": "",
    "text": "There are two types of PAMGuard module. Core modules which are built into the main PAMGuard code and Plugin modules which are distributed sparately. This page tells you how to add a core module to PAMGuard.\nBefore reading this page, make sure you’ve read up on how to develop a core module"
  },
  {
    "objectID": "addmodules.html#writing-pamguard-plug-ins",
    "href": "addmodules.html#writing-pamguard-plug-ins",
    "title": "Adding Core Modules",
    "section": "Writing PAMGuard Plug-ins",
    "text": "Writing PAMGuard Plug-ins\n\nAdding plug-ins to the Core PAMGuard model\nTo make a PAMGuard plug-in available to PAMGuard users it is necessary to edit the java file PamModel/PamModel.java.\nFirst you register the module with PAMGuard using\nPamModuleInfo myModule = PamModuleInfo.registerControlledUnit (String className, String description);\nwhere className is the class name of the class PamControlledUnit and description is the descriptive name of the module.\nFor example\nPamModuleInfo myModule = PamModuleInfo.registerControlledUnit (\"GPS.GPSControl\", \"GPS Processing\");\nadds the GPS module.\nThe module will now be listed in the PAMGuard File/Add Modules menu from where the user can create instances of the module.\nThe PAMGuard settings manager will be aware of the new module and will automatically create the module the next time PAMGuard is run. ### Add the module to a menu group\nDue to the large number of PAMGuard modules now in existence, you will want to have your module listed in one of the sub menus of the File/Add Modules menu. You can add your module to one of the existing groups or you can create a new group of your own. For example, the following code adds the GPS module to the Map menu group\nmyModule.setModulesMenuGroup(mapsGroup);\n\n\nSet module data dependencies\nIt is likely that your module will be dependent on data from some other PAMGuard module. For example, the click detector requires raw data from an acquisition module, the whistle detector required raw data from a FFT module and the GPS module requires data from an NMEA data source.\nYou can set module dependencies using\nPamModuleInfo.addDependency(PamDependency dependancy)\nfor example\nmyModule.addDependency(new PamDependency(NMEADataUnit.class, \"NMEA.NMEAControl\")); \ntells PAMGuard that myModule is dependent on some source of NMEADataUnit and that a possible source of this type of data is the NMEA.NMEAControl module.\nNote that some types of data may be produced by many different modules, so here you should specify the most common source of the data your module will use.\n\n\nSetting the minimum and maximum numbers of module instances\nYou can use two functions\nPamModuleInfo.setMinNumber(int minNumber)\nPamModuleInfo.setMaxNumber(int maxNumber)\nto set the minimum and maximum numbers of a given module type.\nIf these are not set (which is generally the case), then the minimum number defaults to zero and there is no maximum number.\nIf you set a minimum number, then PAMGuard will automatically create that number of modules at start up.\nIf you set a maximum number then PAMGuard will prevent you from creating more than that number of modules."
  },
  {
    "objectID": "admin/index.html",
    "href": "admin/index.html",
    "title": "Admin",
    "section": "",
    "text": "This page is intended only for the PAMGuard development team.\nDownload Stats"
  },
  {
    "objectID": "api/legal/jqueryUI.html",
    "href": "api/legal/jqueryUI.html",
    "title": "PAMGuard",
    "section": "",
    "text": "Copyright jQuery Foundation and other contributors, https://jquery.org/\n\nThis software consists of voluntary contributions made by many\nindividuals. For exact contribution history, see the revision history\navailable at https://github.com/jquery/jquery-ui\n\nThe following license applies to all parts of this software except as\ndocumented below:\n\n====\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n====\n\nCopyright and related rights for sample code are waived via CC0. Sample\ncode is defined as all source code contained within the demos directory.\n\nCC0: http://creativecommons.org/publicdomain/zero/1.0/\n\n====\n\nAll files located in the node_modules and external directories are\nexternally maintained libraries used by this software which have their\nown licenses; we recommend you read them, as their terms may differ from\nthe terms above."
  },
  {
    "objectID": "api/legal/jqueryUI.html#jquery-ui-v1.13.1",
    "href": "api/legal/jqueryUI.html#jquery-ui-v1.13.1",
    "title": "PAMGuard",
    "section": "",
    "text": "Copyright jQuery Foundation and other contributors, https://jquery.org/\n\nThis software consists of voluntary contributions made by many\nindividuals. For exact contribution history, see the revision history\navailable at https://github.com/jquery/jquery-ui\n\nThe following license applies to all parts of this software except as\ndocumented below:\n\n====\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n====\n\nCopyright and related rights for sample code are waived via CC0. Sample\ncode is defined as all source code contained within the demos directory.\n\nCC0: http://creativecommons.org/publicdomain/zero/1.0/\n\n====\n\nAll files located in the node_modules and external directories are\nexternally maintained libraries used by this software which have their\nown licenses; we recommend you read them, as their terms may differ from\nthe terms above."
  },
  {
    "objectID": "configs/clickswhistles.html",
    "href": "configs/clickswhistles.html",
    "title": "Clicks and Whistles",
    "section": "",
    "text": "PAMGuard Configuration\n\n\n\nClicks and Whistles\nA configuration that runs two different detectors at once. The first detects clicks from sperm whales and the second runs a tonal noise detector.\n\n\nUsage Notes\nNMEA Collection should be changed to your own source, at the moment it is simulated. If you are using a sound card with more than two channels, or other than the primary sound card, Sound Acquisition should be edited to reflect this.\nDownload SpermWhalesAndWhistles.psfx"
  },
  {
    "objectID": "configs/difar.html",
    "href": "configs/difar.html",
    "title": "DIFAR Localization",
    "section": "",
    "text": "PAMGuard Configuration"
  },
  {
    "objectID": "configs/difar.html#difar-localization",
    "href": "configs/difar.html#difar-localization",
    "title": "DIFAR Localization",
    "section": "DIFAR Localization",
    "text": "DIFAR Localization\nThis configuration contains example classification and analysis parameters for Antarctic blue whale tonal and FM calls. Classification and analysis of other sounds from other species can be configured in the DIFAR Localisation Settings. NMEA Collection should be changed to your own source, in this configuration file it is simulated. If you are using a sound card with more than two channels, or other than the primary sound card, Sound Acquisition should be edited to reflect this.\nModules: NMEA Collection, GPS Processing, Map, Sound Acquisition, Decimator, FFT Engine, DIFAR Localisation, User Comments, Database, Binary Storage\nDownload DifarBasic.psfx"
  },
  {
    "objectID": "configs/sperm.html",
    "href": "configs/sperm.html",
    "title": "Sperm Whale Detection",
    "section": "",
    "text": "PAMGuard Configuration\n\n\n\nSperm Whale Detection\nSimple sperm whale detector using data input from the system sound card.\n\n\nUsage Notes\nNMEA Collection should be changed to your own source, at the moment it is simulated. If you are using a sound card with more than two channels, or other than the primary sound card, Sound Acquisition should be edited to reflect this.\nDownload SpermWhales.psfx"
  },
  {
    "objectID": "coremodules.html",
    "href": "coremodules.html",
    "title": "Core PAMGuard Modules",
    "section": "",
    "text": "Marine mammals come in many shapes and sizes. This applies to their vocalisations as much as their bodys, so different detectors are needed for different calls from different species.\nThe types of studies we undertake also vary enormously, so the software configuration you might use to process data from a single autonomous recorder might be very different from the configuration you need on a ship based survey, with a complex hydrophone array of many channels. On a ship, you’ll probably also use PAMGuard to collect navigation data from the ships GPS and other sensors.\nFor some studies, you may also want to use more than one instance of the same module. For example, you may want to generate spectrograms on high frequency and low frequency data at the same time using the FFT (Spectrogram) Engine module, or you might want to run a high frequency and a low frequency click detector, each looking for clicks at different frequencies.\nPAMGuard therefore uses a modular architecture, where you the user load the modules you want to use. For some tasks, this may only be one or two, for others many dozens. You’re in charge. However, before you make a configuration with dozens of modules for dozens of species, get used to the system with one or two detectors.\nModules are organised by groups, which correspond to menu groups for adding modules in PAMGuard. For each module, we give the name, the maximum (or in some cases minimum number that can be used and a brief description. For further information, launch PAMGuard and read the online help.\nCurrently, PAMGuard contains 70 different modules.\nIf you’re new to PAMGuard, start at the Tutorials page which will help you get going.\nMaps and Mapping, Utilities, Sensors, Displays, Sound Processing, Detectors, Classifiers, Localisers, Visual Methods"
  },
  {
    "objectID": "coremodules.html#maps-and-mapping-6-modules",
    "href": "coremodules.html#maps-and-mapping-6-modules",
    "title": "Core PAMGuard Modules",
    "section": "Maps and Mapping (6 modules)",
    "text": "Maps and Mapping (6 modules)\n\n\n\n\n\n\n\n\nModule\nNumber\nFunction\n\n\n\n\nNMEA Data Collection\nAny\nCollects NMEA data from a serial port\n\n\nGPS Processing\nAny\nInterprets NMEA data to extract GPS data\n\n\nMap\nAny\nDisplays a map of vessel position and detections\n\n\nAIS Processing\nUp to 1\nInterprets NMEA data to extract AIS data\n\n\nAirgun Display\nAny\nShows the position of airguns (or any other source) on the map\n\n\nFixed Landmarks\nAny\nPlace object symbols on the PAMGuard map"
  },
  {
    "objectID": "coremodules.html#utilities-11-modules",
    "href": "coremodules.html#utilities-11-modules",
    "title": "Core PAMGuard Modules",
    "section": "Utilities (11 modules)",
    "text": "Utilities (11 modules)\n\n\n\n\n\n\n\n\nModule\nNumber\nFunction\n\n\n\n\nDatabase\nExactly 1\nStores PAMGuard data in a database\n\n\nBinary Storage\nUp to 1\nStores PAMGuard data in files on the hard drive\n\n\nData Map\nExactly 1\nShows a summary of data density over time for large datasets\n\n\nUser input\nUp to 1\nCreates a form for the user to type comments into\n\n\nAural Listening Form\nAny\nCreates a form for the user to manually log things they hear\n\n\nSignal Injection and Detector Evaluation (SIDE)\nUp to 1\nSignal injection and real time performance tests\n\n\nAlarm\nAny\nAlerts the operator when certain detections are made\n\n\nSpectrogram Annotation\nAny\nOffline marking on the spectrogram display\n\n\nPrint Screen\nUp to 1\nCapture PAMGuard screens to time-stamped image files and the clipboard. Use  as a shortcut\n\n\nScroll Effort\nUp to 1\nEnables an observer to enter their name and infomation about which displays are being monitored\n\n\nBackup Manager\nUp to 1\nManage automated data backups"
  },
  {
    "objectID": "coremodules.html#sensors-6-modules",
    "href": "coremodules.html#sensors-6-modules",
    "title": "Core PAMGuard Modules",
    "section": "Sensors (6 modules)",
    "text": "Sensors (6 modules)\n\n\n\n\n\n\n\n\nModule\nNumber\nFunction\n\n\n\n\nAnalog Array Sensors\nUp to 1\nReads Depth, Heading, Pitch and Roll) using analog sensors\n\n\nHydrophone Depth Readout\nAny\nReads and displays hydrophone depth information\n\n\nArray Accelerometer\nUp to 1\nReads and accelerometer to orientate a hydrophone array\n\n\nAngle Measurement\nAny\nReads angles from a Fluxgate World shaft angle encoder. (Can be used to read angle of binocular stands)\n\n\nSoundTrap Detector Import\nUp to 1\nTools for import of SoundTrap detector data\n\n\nCPOD Detector Import\nAny\nImports CPOD data"
  },
  {
    "objectID": "coremodules.html#displays-4-modules",
    "href": "coremodules.html#displays-4-modules",
    "title": "Core PAMGuard Modules",
    "section": "Displays (4 modules)",
    "text": "Displays (4 modules)\n\n\n\n\n\n\n\n\nModule\nNumber\nFunction\n\n\n\n\nUser Display\nAny\nCreates an empty display panel which the user can add spectrograms and other displays to\n\n\nLocal Time\nAny\nShows local time on the display\n\n\nLevel Meter\nAny\nShows signal level meters\n\n\nArray Orientation\nUp to 1\nDisplays array depth and orientation data"
  },
  {
    "objectID": "coremodules.html#sound-processing-18-modules",
    "href": "coremodules.html#sound-processing-18-modules",
    "title": "Core PAMGuard Modules",
    "section": "Sound Processing (18 modules)",
    "text": "Sound Processing (18 modules)\n\n\n\n\n\n\n\n\nModule\nNumber\nFunction\n\n\n\n\nSound Acquisition\nAny\nControls input of sound data from sound cards, NI cards, etc.\n\n\nSound Output\nExactly 1\nControls output of sound data for listening to on headphones\n\n\nFFT (Spectrogram) Engine\nAny\nComputes spectrograms of audio data\n\n\nFilters (IIR and FIR)\nAny\nFilters audio data\n\n\nDecimator\nAny\nDecimates (reduces the frequency of) audio data\n\n\nCepstrum\nAny\nCalculates a continuous Cepstrum from FFT Data\n\n\nSound recorder\nAny\nRecords audio data to wav of AIF files\n\n\nClip generator\nAny\nGenerates and stores short clips of sound data in response to detections\n\n\nSignal Amplifier\nAny\nAmplifies (or attenuates) audio data\n\n\nPatch Panel\nAny\nReorganises and mixes audio data between channels\n\n\nSpectrogram smoothing kernel\nAny\nSmooths a spectrogram of audio data\n\n\nSeismic Veto\nAny\nCuts out loud sounds from audio data\n\n\nNoise Monitor\nAny\nMeasures noise in predefined frequency bands (e.g. thrid octave)\n\n\nNoise Band Monitor\nAny\nMeasure noise in octave or third octave bands\n\n\nFiltered Noise Measurement\nAny\nMeasure noise in a single arbitrary filter band (replaces dBHt module)\n\n\nLong Term Spectral Average\nAny\nMake Long Term Spectral Average Measurements\n\n\nEnvelope Tracing\nAny\n\n\n\nBeamformer\nAny\nContinuous Frequency Domain Beamforming"
  },
  {
    "objectID": "coremodules.html#detectors-11-modules",
    "href": "coremodules.html#detectors-11-modules",
    "title": "Core PAMGuard Modules",
    "section": "Detectors (11 modules)",
    "text": "Detectors (11 modules)\n\n\n\n\n\n\n\n\nModule\nNumber\nFunction\n\n\n\n\nClick Detector\nAny\nSearches for transient sounds, attempts to assign species, measure bearings to source, group into click trains, etc.\n\n\nClick Train Detector\nAny\nSearches for click trains in detected clicks.\n\n\nWhistle and Moan Detector\nAny\nSearches for tonal noises. Measures bearings and locations of source. Replaces older Whistle Detector\n\n\nWhistle Detector\nAny\nSearches for tonal noises. Measures bearings and locations of source\n\n\nIshmael energy sum\nAny\nDetects sounds with energy in a specific frequency band\n\n\nIshmael spectrogram correlation\nAny\nDetects sounds matching a user defined ‘shape’ on a spectrogram\n\n\nIshmael matched filtering\nAny\nDetects sounds using a user defined matched filter\n\n\nLikelihood Detector\nAny\nAn implementation of a likelihood ratio test\n\n\nRight Whale Edge Detector\nAny\nDetects right whale upsweep calls\n\n\nGeneralised Power Law Detector\nAny\nGeneralised Power Law Detector for tonal sounds\n\n\nSoundTrap Click Detector\nAny\nClick Detector module for Soundtrap detector data only"
  },
  {
    "objectID": "coremodules.html#classifiers-4-modules",
    "href": "coremodules.html#classifiers-4-modules",
    "title": "Core PAMGuard Modules",
    "section": "Classifiers (4 modules)",
    "text": "Classifiers (4 modules)\n\n\n\n\n\n\n\n\nModule\nNumber\nFunction\n\n\n\n\nWhistle Classifier\nAny\nAnalyses multiple whistle contours to assign to species\n\n\nRocca\nAny\nReal-time acoustic species identification of delphinid whistles and clicks\n\n\nMatched Template Click Classifer\nAny\nClassifies clicks based on an ideal template to match and a template to reject. An example of this is to classify beaked whale clicks in an environment with dolphin clicks\n\n\nDeep Learning Classifier\nAny\nClassifies sections of raw acoustic data based on an imported deep learning classifier"
  },
  {
    "objectID": "coremodules.html#localisers-8-modules",
    "href": "coremodules.html#localisers-8-modules",
    "title": "Core PAMGuard Modules",
    "section": "Localisers (8 modules)",
    "text": "Localisers (8 modules)\n\n\n\n\n\n\n\n\nModule\nNumber\nFunction\n\n\n\n\nBearing Localiser\nAny\nEstimate bearing to detections or spectrogram marks from small aperture arrays\n\n\nGroup 3D Localiser\nAny\n2D and 3D Localisation for large aperture arrays\n\n\nDetection Grouper\nAny\nGroups detections and other data using manual annotations on PAMGuard displays\n\n\nIshmael Locator\nAny\nLocates sounds extracted either from areas marked out on a spectrogram display or using output from a detector\n\n\nMultipath 3D Localiser\nAny\nLocates sounds detected by the click detector using surface echo’s to obtain slant angles and generate a 3-D location\n\n\nDIFAR Azigram Engine\nAny\n(BETA) Azigram engine for multiplexed DIFAR data (BETA)\n\n\nDIFAR Directional Audio\nAny\nAudio from a DIFAR sonobuoy that has been beamformed at a user-specified single steering angle. This module can be used to reduce directional masking noise.\n\n\nDIFAR Localisation\nUp to 1\nDIFAR Sonobuoy localisation module - takes raw data source with multiplexed directional audio data"
  },
  {
    "objectID": "coremodules.html#visual-methods-2-modules",
    "href": "coremodules.html#visual-methods-2-modules",
    "title": "Core PAMGuard Modules",
    "section": "Visual Methods (2 modules)",
    "text": "Visual Methods (2 modules)\n\n\n\n\n\n\n\n\nModule\nNumber\nFunction\n\n\n\n\nVideo Range\nAny\nCalculates ranges based on angles measured from video, observer height and earth radius\n\n\nLogger Forms\nUp to 1\nReplicates the functionality of User Defined Forms in the IFAW Logger software"
  },
  {
    "objectID": "devmodules.html",
    "href": "devmodules.html",
    "title": "Develop PAMGuard Modules",
    "section": "",
    "text": "Most of the functionality of PAMGuard is implemented in a series of modules which either process data in some way and / or provide a display and / or provide graphic overlays for other built in displays.\nThere are two types of module:\n\nCore modules, which are of interest and beneficial to the wider PAMGuard community.\nThese should be extensively tested and fully documented, and will be integrated directly into the PAMGuard code base and included with each PAMGuard release.\nExternal plug in modules, which are developed for specific projects and have limited use.\nThese modules are bundled into a single jar file and reside in the plugins subfolder. PAMGuard searches this folder during startup and loads any properly-implemented java packages that it finds. External plug-in modules are downloaded separately from the PAMGuard installer, and can be hosted on the PAMGuard website and/or the developer’s own website.\n\nAll PAMGuard modules are subclasses of PamControlledUnit;\nTo make a module, first create a new package to store the java classes.\nAll classes should be contained within new packages (i.e. do not create new classes in existing PAMGuard core packages). Create a subclass of PamControlledUnit, adding to the subclass the various components described below. Then, either add your new module to the PAMGuard data model (for a core mdoule) or bundle your code into a jar file and distribute (for an external module).\nAvailable components of a PAMGuard module are\n\nAn Interface to pass PAMGuard information about the modules\nA Process that modifies data in some way\nA Tab panel display\nA Side panel display\nA Display Menu\nA Detection menu\nA File menu\nGraphic Overlays\nPlug in display panels\n\nAll components of a PAMGuard module are optional except for the main PamControlledUnit class. The table shows existing modules.\n\n\n\nAlthough the default constructor for PamControlledUnit is\npublic PamControlledUnit(String unitType, String unitName)\nyou must provide a constructor in your sub class that takes just the unitName, e.g.\npublic class MyDetectorController extends PamControlledUnit { \n  public MyDetectorController(String unitName) { \n    super(\"My detector\", unitName); \n    etc... \nPamguard will search for and use this single parameter constructor when creating modules and adding them to the Pamguard data model.\n\n\n\nPamguard Processes are subclasses of PamProcess. A PamProcess will subscribe to one or more PamDataBlock(s). A PamProcess will generally also create one or more new PamDataBlock(s). When new data arrive from the PamDataBlock, the process will manipulate those data in some way and create information that is added to the output data blocks.\nEach Pamguard module may have any number of processes, for example, most displays do not have a process at all. The whistle detector, on the other hand, has separate processes for peak detection and whistle linking.\nTo add a process to a plug in, use the addPamProcess function in PamControlledUnit.\n\n\n\nPAMGuard Tab panels are added as separate tabs on the main PAMGuard GUI display. A tab panel may contain graphics or tables to display information of any type.\nEach PAMGuard module may only have a single tab panel per plug in. however, since the developer can put anything they like into that one tab panel, it is of course possible to place a tab panel in that one tab panel and for the inner tab panel to contain multiple tabs !\nTo add a tab panel to a plug in, use the setTabPanel function in PamControlledUnit.\n\n\n\nA process that requires a detection menu should override the function createDetectionMenu function in PamControlledUnit.\nNote that a new detection menu may be created multiple times as modules are added and removed from the PAMGuard system. Therefore the implementation of createDetectionMenu should contain only a minimum amount of code required to make the actual menu and should avoid calling constructors for additional objects.\nDetection menus will automatically be incorporated as sub-menus in PAMGuard’s main detection menu. They will also be shown as separate menu items in the main menu bar when the tab panel (if one exists) for the module is selected.\n\n\n\nA process that requires a display menu should override the function createDisplayMenu function in PamControlledUnit.\nNote that a new display menu may be created multiple times as modules are added and removed from the PAMGuard system. Therefore the implementation of createDisplayMenu should contain only a minimum amount of code required to make the actual menu and should avoid calling constructors for additional objects.\nDisplay menus will automatically be incorporated as sub-menus in PAMGuard’s main display menu. They will also be shown as separate menu items in the main menu bar when the tab panel (if one exists) for the module is selected.\n\n\n\nA process that requires a display menu should override the function createFileMenu function in PamControlledUnit.\nNote that a new display menu may be created multiple times as modules are added and removed from the PAMGuard system. Therefore the implementation of createFileMenu should contain only a minimum amount of code required to make the actual menu and should avoid calling constructors for additional objects.\nFile menus will automatically be incorporated as sub-menus in PAMGuard’s main file menu.\n\n\n\nSets the side panel for the PamControlledUnit Side panels are shown down the left hand side of the main PAMGuard GUI and are always visible, irrespective of which tab is being viewed on the main tabbed display.\nSide panels are generally used to display summary information for the PamControlledUnit or to provide quick access controls.\nTo add a side panel to a plug in, use the setSidePanel function in PamControlledUnit.\n\n\n\nMost Pam Processes will produce now data in one form or another. Data are stored as PamDataUnits in PamDataBlock(s).\nIn general, the PamDataBlock(s) are created at the same time as the PamProcess. PamDataUnits are then added to the PamDataBlock(s)as and when they become available.\nFor some processes, such as the FFT Engine, PamDataUnits will be added to the output PamDataBlock at regular intervals. For other processes, such as the Click Detector new PamDataUnits will be only be added if and when detections are made.\n\n\n\nAs well as creating their own tab panel and side panels, PamProcess output can be overlaid on pre-existing PAMGuard displays.\nDisplays that currently support graphic overlays are (as of December 2006)\n\nThe Map\nSpectrograms\nRadar Displays\n\nFor details of how to make graphic overlays in PAMGuard see How to make graphic overlays\n\n\n\nSound data are often viewed on a scrolling Spectrogram Display.\nPAMGuard modules can provide additional scrolling display panels which can be added to the bottom of the spectrogram display in order to show data that are not suitable for display in a graphic overlay.\nScroll speed of module panels is controlled by the spectrogram display so that the module panel data remain in line with the spectrogram data.\nFor details on how to make display panels see How to make display panels"
  },
  {
    "objectID": "devmodules.html#writing-pamguard-modules",
    "href": "devmodules.html#writing-pamguard-modules",
    "title": "Develop PAMGuard Modules",
    "section": "",
    "text": "Most of the functionality of PAMGuard is implemented in a series of modules which either process data in some way and / or provide a display and / or provide graphic overlays for other built in displays.\nThere are two types of module:\n\nCore modules, which are of interest and beneficial to the wider PAMGuard community.\nThese should be extensively tested and fully documented, and will be integrated directly into the PAMGuard code base and included with each PAMGuard release.\nExternal plug in modules, which are developed for specific projects and have limited use.\nThese modules are bundled into a single jar file and reside in the plugins subfolder. PAMGuard searches this folder during startup and loads any properly-implemented java packages that it finds. External plug-in modules are downloaded separately from the PAMGuard installer, and can be hosted on the PAMGuard website and/or the developer’s own website.\n\nAll PAMGuard modules are subclasses of PamControlledUnit;\nTo make a module, first create a new package to store the java classes.\nAll classes should be contained within new packages (i.e. do not create new classes in existing PAMGuard core packages). Create a subclass of PamControlledUnit, adding to the subclass the various components described below. Then, either add your new module to the PAMGuard data model (for a core mdoule) or bundle your code into a jar file and distribute (for an external module).\nAvailable components of a PAMGuard module are\n\nAn Interface to pass PAMGuard information about the modules\nA Process that modifies data in some way\nA Tab panel display\nA Side panel display\nA Display Menu\nA Detection menu\nA File menu\nGraphic Overlays\nPlug in display panels\n\nAll components of a PAMGuard module are optional except for the main PamControlledUnit class. The table shows existing modules.\n\n\n\nAlthough the default constructor for PamControlledUnit is\npublic PamControlledUnit(String unitType, String unitName)\nyou must provide a constructor in your sub class that takes just the unitName, e.g.\npublic class MyDetectorController extends PamControlledUnit { \n  public MyDetectorController(String unitName) { \n    super(\"My detector\", unitName); \n    etc... \nPamguard will search for and use this single parameter constructor when creating modules and adding them to the Pamguard data model.\n\n\n\nPamguard Processes are subclasses of PamProcess. A PamProcess will subscribe to one or more PamDataBlock(s). A PamProcess will generally also create one or more new PamDataBlock(s). When new data arrive from the PamDataBlock, the process will manipulate those data in some way and create information that is added to the output data blocks.\nEach Pamguard module may have any number of processes, for example, most displays do not have a process at all. The whistle detector, on the other hand, has separate processes for peak detection and whistle linking.\nTo add a process to a plug in, use the addPamProcess function in PamControlledUnit.\n\n\n\nPAMGuard Tab panels are added as separate tabs on the main PAMGuard GUI display. A tab panel may contain graphics or tables to display information of any type.\nEach PAMGuard module may only have a single tab panel per plug in. however, since the developer can put anything they like into that one tab panel, it is of course possible to place a tab panel in that one tab panel and for the inner tab panel to contain multiple tabs !\nTo add a tab panel to a plug in, use the setTabPanel function in PamControlledUnit.\n\n\n\nA process that requires a detection menu should override the function createDetectionMenu function in PamControlledUnit.\nNote that a new detection menu may be created multiple times as modules are added and removed from the PAMGuard system. Therefore the implementation of createDetectionMenu should contain only a minimum amount of code required to make the actual menu and should avoid calling constructors for additional objects.\nDetection menus will automatically be incorporated as sub-menus in PAMGuard’s main detection menu. They will also be shown as separate menu items in the main menu bar when the tab panel (if one exists) for the module is selected.\n\n\n\nA process that requires a display menu should override the function createDisplayMenu function in PamControlledUnit.\nNote that a new display menu may be created multiple times as modules are added and removed from the PAMGuard system. Therefore the implementation of createDisplayMenu should contain only a minimum amount of code required to make the actual menu and should avoid calling constructors for additional objects.\nDisplay menus will automatically be incorporated as sub-menus in PAMGuard’s main display menu. They will also be shown as separate menu items in the main menu bar when the tab panel (if one exists) for the module is selected.\n\n\n\nA process that requires a display menu should override the function createFileMenu function in PamControlledUnit.\nNote that a new display menu may be created multiple times as modules are added and removed from the PAMGuard system. Therefore the implementation of createFileMenu should contain only a minimum amount of code required to make the actual menu and should avoid calling constructors for additional objects.\nFile menus will automatically be incorporated as sub-menus in PAMGuard’s main file menu.\n\n\n\nSets the side panel for the PamControlledUnit Side panels are shown down the left hand side of the main PAMGuard GUI and are always visible, irrespective of which tab is being viewed on the main tabbed display.\nSide panels are generally used to display summary information for the PamControlledUnit or to provide quick access controls.\nTo add a side panel to a plug in, use the setSidePanel function in PamControlledUnit.\n\n\n\nMost Pam Processes will produce now data in one form or another. Data are stored as PamDataUnits in PamDataBlock(s).\nIn general, the PamDataBlock(s) are created at the same time as the PamProcess. PamDataUnits are then added to the PamDataBlock(s)as and when they become available.\nFor some processes, such as the FFT Engine, PamDataUnits will be added to the output PamDataBlock at regular intervals. For other processes, such as the Click Detector new PamDataUnits will be only be added if and when detections are made.\n\n\n\nAs well as creating their own tab panel and side panels, PamProcess output can be overlaid on pre-existing PAMGuard displays.\nDisplays that currently support graphic overlays are (as of December 2006)\n\nThe Map\nSpectrograms\nRadar Displays\n\nFor details of how to make graphic overlays in PAMGuard see How to make graphic overlays\n\n\n\nSound data are often viewed on a scrolling Spectrogram Display.\nPAMGuard modules can provide additional scrolling display panels which can be added to the bottom of the spectrogram display in order to show data that are not suitable for display in a graphic overlay.\nScroll speed of module panels is controlled by the spectrogram display so that the module panel data remain in line with the spectrogram data.\nFor details on how to make display panels see How to make display panels"
  },
  {
    "objectID": "downloadsurvey.html",
    "href": "downloadsurvey.html",
    "title": "Download PAMGuard",
    "section": "",
    "text": "Before downloading PAMGuard please fill out a short survey (2 minutes)\nWe will use this data to understand who is using PAMGuard, with a view to trying to improve support and training, particularly to users from the global South. We may publish summary statistics and use those in publications and fund raising applications.\nAll data will be stored on secure servers and individual data will not be shared with any third parties under any circumstances.\nIf you provide an email address, this will be used to send out notifications of new releases / important updates. A maximum level of email traffic will be around 10 emails per year. If you’re interested in more regular updates, please follow us on Facebook.\nYou are not obliged to answer any of the questions on the form. If you wish your data to be deleted at any time, please email us at pamguard@st-andrews.ac.uk. After filling out the survey, you’ll be directed to the download page:\nTake me to the survey Skip survey and download\n PAMGuard downloads 2012 - 2024"
  },
  {
    "objectID": "featurepanels/offline.html",
    "href": "featurepanels/offline.html",
    "title": "Data Visualisation",
    "section": "",
    "text": "The PAMGuard datamap allows rapid navigation through large datasets\n\n\nWhen processing data back at the lab, PAMGuard can process data at many times real time. This is great for processing data from autonomous recorders or for reprocessing old data from ship based surveys with the latest algorithms.\nThe PAMGuard Viewer allows you to scroll through the detection data and further annotate the automatic detections.\nNext: Read about open source\nPrevious: Read about real time operation"
  },
  {
    "objectID": "featurepanels/readyforAI.html",
    "href": "featurepanels/readyforAI.html",
    "title": "AI enabled",
    "section": "",
    "text": "Right whale model running on raw sound data\n\n\n\n\n\n\n\nDetected bat calls classified to species by a deep learning model\n\n\n\n\nPAMGuard has a powerful deep learning module which can run deep learning based models on your acoustic data without the need for code. Users can load a model from a file, URL or one of the default example models and run on raw sound data or classify individual detection depending on the use case.\nThe module is fully integrated into all displays (click detector, spectrogram, time display etc.) allowing users to visualise deep learning results and integrate AI analysis methods into real time or post processing workflows. Data are saved using PAMGuard’s data management systems and can be accessed for further analysis via the exporter or MATLAB/R libraries. More information on the module is available via the help file.\nNext: Read about other automated analysis algorithms\nPrevious: Read about real time operation"
  },
  {
    "objectID": "featurepanels/watchdog.html",
    "href": "featurepanels/watchdog.html",
    "title": "WatchDog",
    "section": "",
    "text": "Should PAMGuard crash, or there be a Windows restart, or a power failure at the PC, PAMDog will get PAMGuard going again.\nPAMDog is installed with PAMGuard on Windows machines, but you will have to enable it, but creating a shortcut in your startup menu. Read how to do this in the help files.\nPrevious: Read about data visualisation"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "PAMGuard",
    "section": "",
    "text": "World leading software for the Detection, Classification, and Localisation of marine mammal and other animal sounds\n\n\n\nDownload PAMGuard\n\n\nComprehensive suite of features for automtatic processing, visualisation and management of large acoustic datasets without the need for code\n\n\n\n\n\n\n\n\n\n\n\nAI enabled\n\n\nPAMGuard runs AI based classifiers natively allowing users to test and use the latest automated classifiers as soon as they become available .\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nReal Time Monitoring\n\n\nProcess data in real time using a wide range of Detection, Classification and Localisation algorithms, combined with sophisticated user displays.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAutomated analysis\n\n\nDetect and classify using state-of-the-art algorithms\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nData Visualisation\n\n\nProcess data back at the lab, using the same algorithms and displays that can be used for real time monitoring\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOpen Source Software\n\n\nPAMGuard software is all open source meaning you’re free to modify the code and to use it in any way you want.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWatchDog\n\n\nThe PAMGuard watchdog program PAMDog will keep PAMGuard running and restart it whatever happens.\n\n\n\n\n\n\n\n\n\n\n\n\nNo matching items\n\n\n  \n\n\n\n\nPAMGuard is used to study whales and dolphins around the world and to mitigate against the potentially harmful effects of human activities in our seas\n\n\n\n\n\n\n\n\n\n\n\n\nPAMGuard and Tidal Turbines\n\n\n\n\n\n\n\nIn 2017 a tidal trubine was equiped with a 12 channel 500KHz localising array to track porpoise movements. PAMGuard was used in real time to;\n\n\nAcquire and decompress data sent from the turbine to shore via a fibre optic cable\n\n\nDetect possible porpoise echolocation clicks\n\n\nMeasure octave noise bands across the frequency spectrum\n\n\nDetect dolphin whistles\n\n\nManage and store the detection data\n\n\n\n\n\n\n\n\n\n\n\n\nNo matching items\n\n\n\n\n\n\nLatest News\n\n\n\n\n\n\n\n\n\n\nMontabaranom et al. 2025\n\n\nNew publication using PAMGuard to track seals around a tidal turbine\n\n\n\n\n\n\nJan 8, 2025\n\n\n\n\n\n\n\n\n\n\n\n\nGarrobe et al. 2024\n\n\nNew publication comparing existing PAMGuard detectors with new machine learning methods\n\n\n\n\n\n\nDec 18, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nBlueSky\n\n\nPAMGuard now has it’s own BlueSky account @pamguard.org\n\n\n\n\n\n\nDec 14, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nVersion 2.02.15\n\n\nPAMGuard version 2.02.15 is now available for Windows and Mac\n\n\n\n\n\n\nDec 12, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nBatch Processing\n\n\nBatch Processing module V1.6 for PAMGuard is now available\n\n\n\n\n\n\nDec 8, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nNew PAMGuard Website\n\n\nWe’re pleased to bring you a new look PAMGuard website which will make it easier to find the PAMGuard information you want.\n\n\n\n\n\n\nDec 7, 2024\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "links/mmo.html",
    "href": "links/mmo.html",
    "title": "MMO and Service Providers",
    "section": "",
    "text": "A.I.S. Inc.\n\n\nBenthic Solutions Limited\n\n\nBlue Planet Marine\n\n\nCSA Ocean Sciences\n\n\nEOM Offshore\n\n\nEPI\n\n\nGardline Environmental\n\n\nGlobal Seismic MMO Ltd\n\n\nHydenlyne \n\n\nOcean Science Analytics\n\n\nOcean Science Consulting (OSC) LtdOceanEar Limited\n\n\nRPS Energy\n\n\nSA Instrumentation\n\n\nSeamap\n\n\nSeiche\n\n\nVanishing Point Marine\n\n\n \n\n\nMMO and PAM Training \n\n\nA.I.S. Inc.\n\n\nCarolyn Barton\n\n\nCSA Ocean Sciences\n\n\nEdgewise Environmental Ltd\n\n\nHebridean Whale and Dolphin Trust\n\n\nIntelligent Ocean\n\n\nOcean Science Analytics\n\n\nOcean Science Consulting (OSC) Ltd\n\n\nPatrick Lyne\n\n\nSeiche"
  },
  {
    "objectID": "matlabandr.html",
    "href": "matlabandr.html",
    "title": "Matlab and R",
    "section": "",
    "text": "Many users find that they can only go so far when processing data with PAMGuard and there are often important steps that people need to take to go from PAMGuard to a published paper.\nWe therefore provide export functions and software libraries written in Matlab and R (a Python version is on it’s way) which can access PAMGuard data files.\nThis allows you to conduct bespoke analysis of PAMGuard output in a more user friendly programming environment.\n\nExportRMATLAB\n\n\n\n\n\n\nExport data to other platforms\n\n\nPAMGuard has a powerful exporter which can export detections to;\n\n.mat files which can be opened in MATLAB.\n.RData frames which can be open in R.\n.wav file which can be opened in any acoustics program.\n\nThe exporter allows filtering of data based on, for example, species classiifcaton, manual annotations etc. allowing users to specify exactly what is exported.\n\n\n\n\n\n\nThanks so much to our friends at NOAA Southwest Fisheries Science Center in San Diego , there is also an R package for opening PAMGuard binary files:\n install.packages(“PamBinaries”) \nYou can find the source files on GitHub.\nThe best way to download and stay up-to-date with this is by following the installation instructions on the GitHub page. The R functions are written to work just like the MATLAB code, and there is a short tutorial on the GitHub page.\nlibrary(PamBinaries)\n\n#count the number of classified clicks in a folder of pamguard files. \n#folder to a set of binary files. \n\nfolder='my/folder/of/pamguard/click/files'\n\n# list all the file names of the\n# specified pattern\nfnames &lt;- list.files(folder, pattern = \"Click_Detector_Clicks.*\\\\.pgdf$\")\n\ncount =0; #the classified click counter. \nfor (val in fnames) {\n  print(val)\n  \n  #load each click file.\n  clickfile &lt;- loadPamguardBinaryFile(file.path(folder, val))\n  \n  #iterate through the click files to count the classified clicks. \n  for (aclick in clickfile$data) {\n    if (aclick$type==1){\n      count=count+1\n    }\n  }\n}\n\n\nUsers can also take more control and import PAMGuard data files directly in MATLAB using the PAMGuard-matlab library\nMATLAB code for opening PAMGuard binary files is now on the PAMGuard GitHub repository.\nClicking the green ‘Code’ button will allow you to download the code as a zip archive. Alternatively, you can clone the repository, which will make it easier to get updates if the code is updated.\n% count the number of classified clicks in a binary file folder of clicks. \n\nclear\n% the path to the binary file foldeer\nfolder='/my/binary/file/folder';\n \nbinaryFiles = dir(fullfile(folder, 'Click_Detector_Clicks*.pgdf'));\n \ncount=0; \nfor i=1:length(binaryFiles)\n    %print progress\n    disp(['Loading files: ' num2str(i) ...\n        ' of ' num2str(length(binaryFiles))])\n\n   %create filepath from dir dtruct\n    filePath=fullfile(folder, binaryFiles(i).name);\n\n    %load the clicks\n    clicks=loadPamguardBinaryFile(filePath);\n\n    %iterate through all clicks and count how many are classified \n    for j=1:length(clicks)\n         if (clicks(j).type==1) \n            count=count+1;\n         end\n    end\nend"
  },
  {
    "objectID": "news/241207_newwebsite.html",
    "href": "news/241207_newwebsite.html",
    "title": "New PAMGuard Website",
    "section": "",
    "text": "We’re pleased to bring you a new look PAMGuard website which will be easier for us to manage and easier for you to navigate.\nThe new site has been developed using the open source tools from Quarto and is being hosted on GitHub pages.\nWe hope that you find the new site easy to navigate and that you can get the PAMGuard downloads and information that you want.\nIf there was anything on the old site that you think we’ve left out, please get in touch."
  },
  {
    "objectID": "news/241209_V2_02_15.html",
    "href": "news/241209_V2_02_15.html",
    "title": "Version 2.02.15",
    "section": "",
    "text": "PAMGuard version 2.02.15 is now available for Windows and Mac."
  },
  {
    "objectID": "news/241209_V2_02_15.html#new-features",
    "href": "news/241209_V2_02_15.html#new-features",
    "title": "Version 2.02.15",
    "section": "New Features",
    "text": "New Features\nAdded ability to export click events to the exporter.\nUpdates to deep learning module to deal with group detections.\nNew icons and graphical user interface style for Mac."
  },
  {
    "objectID": "news/241209_V2_02_15.html#bug-fixes",
    "href": "news/241209_V2_02_15.html#bug-fixes",
    "title": "Version 2.02.15",
    "section": "Bug Fixes",
    "text": "Bug Fixes\nFixed important timing bug that affected offline analysis when there was a gap in data, causing certain binary files before the gap to be closed with an incorrect end time.\nFixed issue #177 with clip generator dialog always reverting to first available input source.\nRemoved unnecessary text output from DL classifier module.\nFixed units on spectrogram displays for air based measurements.\nFixed bug in whistle and moan detector graphics that caused whistles with branches to not draw."
  },
  {
    "objectID": "news/241218_Garrobeetal.html",
    "href": "news/241218_Garrobeetal.html",
    "title": "Garrobe et al. 2024",
    "section": "",
    "text": "https://doi.org/10.1121/10.0034602\nComparing neural networks against click train detectors to reveal temporal trends in passive acoustic sperm whale detections\nLaia Garrob\u0002e Fonollosa, Thomas Webber, Jose Maria Brotons, Margalida Cerda, Douglas Gillespie, Enrico Pirotta, and Luke Rendell\nABSTRACT\nPassive acoustic monitoring (PAM) is an increasingly popular tool to study vocalising species. The amount of data generated by PAM studies calls for robust automatic classifiers. Deep learning (DL) techniques have been proven effective in identifying acoustic signals in challenging datasets, but due to their black-box nature their underlying biases are hard to quantify. This study compares human analyst annotations, a multi-hypothesis tracking (MHT) click train classifier and a DL-based acoustic classifier to classify acoustic recordings based on the presence or absence of sperm whale (Physeter macrocephalus) click trains and study the temporal and spatial distributions of the Mediterranean sperm whale subpopulation around the Balearic Islands. The MHT and DL classifiers showed agreements with human labels of 85.7% and 85.0%, respectively, on data from sites they were trained on, but both saw a drop in performance when deployed on a new site. Agreement rates between classifiers surpassed those between human experts. Modeled seasonal and diel variations in sperm whale detections for both classifiers showed compatible results, revealing an increase in occurrence and diurnal activity during the summer and autumn months. This study highlights the strengths and limitations of two automatic classification algorithms to extract biologically useful information from large acoustic datasets. VC 2024 Acoustical Society of America."
  },
  {
    "objectID": "plugins/batchprocessor.html",
    "href": "plugins/batchprocessor.html",
    "title": "Batch Processor",
    "section": "",
    "text": "The Batch Processing module can be used to run the same configuration file on multiple datasets using the same psfx file without having to go into the configuration for every dataset to change the location of the source files, the output database name, and the location of the binary store.\nIt is particularly useful for processing datasets from deployments of multiple autonomous recorders, but also has application in reprocessing of any data where you want to run the same PAMGuard algorithms on multiple sets of data.\nCurrently, it can only be used to process raw data files in normal mode. We are currently developing a version that can run viewer mode tasks on multiple datasets, such as reclassifying clicks, or running the click train detector.\n\n\nSource Code\nBuilt Module"
  },
  {
    "objectID": "plugins/batchprocessor.html#pamguard-batch-processor",
    "href": "plugins/batchprocessor.html#pamguard-batch-processor",
    "title": "Batch Processor",
    "section": "",
    "text": "The Batch Processing module can be used to run the same configuration file on multiple datasets using the same psfx file without having to go into the configuration for every dataset to change the location of the source files, the output database name, and the location of the binary store.\nIt is particularly useful for processing datasets from deployments of multiple autonomous recorders, but also has application in reprocessing of any data where you want to run the same PAMGuard algorithms on multiple sets of data.\nCurrently, it can only be used to process raw data files in normal mode. We are currently developing a version that can run viewer mode tasks on multiple datasets, such as reclassifying clicks, or running the click train detector.\n\n\nSource Code\nBuilt Module"
  },
  {
    "objectID": "plugins/demodetector.html",
    "href": "plugins/demodetector.html",
    "title": "Workshop Demo Detector",
    "section": "",
    "text": "Simple detector designed to demonstrate main PAMGuard developer environment, using as many PAMGuard features as possible, but in a really simple way.\nThe detector is a very simple in-band energy detector. It will subscribe to a block of FFT (spectrogram) data and measure the background noise in a given frequency band over some time period and compare the signal to that background measure. If the SNR is &gt;threshold a detection starts, if it’s below threshold it stops again.\n\n\nSource Code\nBuilt Module"
  },
  {
    "objectID": "plugins/demodetector.html#workshop-demo-detector",
    "href": "plugins/demodetector.html#workshop-demo-detector",
    "title": "Workshop Demo Detector",
    "section": "",
    "text": "Simple detector designed to demonstrate main PAMGuard developer environment, using as many PAMGuard features as possible, but in a really simple way.\nThe detector is a very simple in-band energy detector. It will subscribe to a block of FFT (spectrogram) data and measure the background noise in a given frequency band over some time period and compare the signal to that background measure. If the SNR is &gt;threshold a detection starts, if it’s below threshold it stops again.\n\n\nSource Code\nBuilt Module"
  },
  {
    "objectID": "plugins/resourcemon.html",
    "href": "plugins/resourcemon.html",
    "title": "Resource Monitor",
    "section": "",
    "text": "Provides additional monitoring of PAMGuard memory usage in the side bar.\n\n\nSource Code\nBuilt Module"
  },
  {
    "objectID": "plugins/resourcemon.html#resource-monitor",
    "href": "plugins/resourcemon.html#resource-monitor",
    "title": "Resource Monitor",
    "section": "",
    "text": "Provides additional monitoring of PAMGuard memory usage in the side bar.\n\n\nSource Code\nBuilt Module"
  },
  {
    "objectID": "plugins/spermipi.html",
    "href": "plugins/spermipi.html",
    "title": "Sperm Whale IPI Measurement",
    "section": "",
    "text": "The “Sperm whale IPI Plugin” (AKA IPI plugin) is an external plugin for measuring the Inter-Pulse Interval (IPI) of the clicks of sperm whales. Measurement of IPI has been demonstrated to be a reliable means of estimating the total length of an individual sperm whale (Gordon 1991; Growcott et al 2011). The module employs two related signal processing methods, both based on cepstral analysis of clicks, to estimate IPI.\nSee the online help for further details.\n\n\nMiller, B. S., Growcott, A., Slooten, E., and Dawson, S. M. (2013). Acoustically derived growth rates of sperm whales (Physeter macrocephalus) in Kaikoura, New Zealand. J. Acoust. Soc. Am., 134, 2438–45. doi:10.1121/1.4816564.\n\n\n\nSource Code\nBuilt Module"
  },
  {
    "objectID": "plugins/spermipi.html#sperm-whale-ipi-measurement",
    "href": "plugins/spermipi.html#sperm-whale-ipi-measurement",
    "title": "Sperm Whale IPI Measurement",
    "section": "",
    "text": "The “Sperm whale IPI Plugin” (AKA IPI plugin) is an external plugin for measuring the Inter-Pulse Interval (IPI) of the clicks of sperm whales. Measurement of IPI has been demonstrated to be a reliable means of estimating the total length of an individual sperm whale (Gordon 1991; Growcott et al 2011). The module employs two related signal processing methods, both based on cepstral analysis of clicks, to estimate IPI.\nSee the online help for further details.\n\n\nMiller, B. S., Growcott, A., Slooten, E., and Dawson, S. M. (2013). Acoustically derived growth rates of sperm whales (Physeter macrocephalus) in Kaikoura, New Zealand. J. Acoust. Soc. Am., 134, 2438–45. doi:10.1121/1.4816564.\n\n\n\nSource Code\nBuilt Module"
  },
  {
    "objectID": "plugins/videorange.html",
    "href": "plugins/videorange.html",
    "title": "Video Range (legacy)",
    "section": "",
    "text": "Earlier version of Video Range module from about 2016, SVN revision 3281 before the more complicated landmark based features were added.\nThe module uses camera and video images to measure angles from the horizon in order to measure distances to animals at the surface.\n\n\nLeaper, Russell, and Jonathan Gordon. “Application of photogrammetric methods for locating and tracking cetacean movements at sea.” J. Cetacean Res. Manage. 3, no. 2 (2001): 131-141.\nGillespie, Douglas, Russell Leaper, Jonathan Gordon, and Kelly Macleod. “An integrated data collection system for line transect surveys.” J. Cetacean Res. Manage. 11, no. 3 (2010): 217-227.\n\n\n\nSource Code\nBuilt Module"
  },
  {
    "objectID": "plugins/videorange.html#video-range",
    "href": "plugins/videorange.html#video-range",
    "title": "Video Range (legacy)",
    "section": "",
    "text": "Earlier version of Video Range module from about 2016, SVN revision 3281 before the more complicated landmark based features were added.\nThe module uses camera and video images to measure angles from the horizon in order to measure distances to animals at the surface.\n\n\nLeaper, Russell, and Jonathan Gordon. “Application of photogrammetric methods for locating and tracking cetacean movements at sea.” J. Cetacean Res. Manage. 3, no. 2 (2001): 131-141.\nGillespie, Douglas, Russell Leaper, Jonathan Gordon, and Kelly Macleod. “An integrated data collection system for line transect surveys.” J. Cetacean Res. Manage. 11, no. 3 (2010): 217-227.\n\n\n\nSource Code\nBuilt Module"
  },
  {
    "objectID": "plugins/wams.html",
    "href": "plugins/wams.html",
    "title": "NMMF WAMS Plugin",
    "section": "",
    "text": "The NMMF WAMS plugin provides a simple way to monitor a detector and/or multiple alarms, and generate reports summarizing activity over specific time periods. Information is saved to the database and can be displayed in table and chart form on User Display modules.\n\n\nBrittany L Jones, Michael Oswald, Samantha Tufano et al. Introducing NMMF WAMS, an open-source PAMGuard plug-in, and some pilot data for its use as a welfare acoustic monitoring system, 12 August 2020, PREPRINT (Version 1) available at Research Square https://doi.org/10.21203/rs.3.rs-55999/v1\n\n\n\nSource Code\nBuilt Module"
  },
  {
    "objectID": "plugins/wams.html#nmmf-wams-plugin",
    "href": "plugins/wams.html#nmmf-wams-plugin",
    "title": "NMMF WAMS Plugin",
    "section": "",
    "text": "The NMMF WAMS plugin provides a simple way to monitor a detector and/or multiple alarms, and generate reports summarizing activity over specific time periods. Information is saved to the database and can be displayed in table and chart form on User Display modules.\n\n\nBrittany L Jones, Michael Oswald, Samantha Tufano et al. Introducing NMMF WAMS, an open-source PAMGuard plug-in, and some pilot data for its use as a welfare acoustic monitoring system, 12 August 2020, PREPRINT (Version 1) available at Research Square https://doi.org/10.21203/rs.3.rs-55999/v1\n\n\n\nSource Code\nBuilt Module"
  },
  {
    "objectID": "quarto.html",
    "href": "quarto.html",
    "title": "quarto",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "quarto.html#quarto",
    "href": "quarto.html#quarto",
    "title": "quarto",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "releases/download.html",
    "href": "releases/download.html",
    "title": "Download PAMGuard",
    "section": "",
    "text": "Built PAMGuard installers are released approximately every three to six months.\nEach release is tagged on GitHub and for recent versions a snapshot copied to the Zenodo research repository at CERN.\nZenodo provides a Digital Object Identifier (DOI) to each release which can be used to cite the software. e.g. Gillespie, D., & Macaulay, J. (2024). PAMGuard (V2.02.15). Zenodo. https://doi.org/10.5281/zenodo.14414376\nGo to Zenodo for more citation styles for different releases.\n\n\n\n\n\nVersion\n\n\nDate\n\n\nSystems\n\n\n\n\n\n\nVersion 2.02.15\n\n\n2024-12-12\n\n\nWindows and Mac\n\n\n\n\nVersion 2.02.14\n\n\n2024-10-18\n\n\nWindows only\n\n\n\n\nVersion 2.02.13\n\n\n2024-08-27\n\n\nWindows only\n\n\n\n\nVersion 2.02.06\n\n\n2022-11-17\n\n\nWindows and Mac\n\n\n\n\n\nNo matching items\n\n\nRelease notes for all versions"
  },
  {
    "objectID": "releases/V2_02_13.html",
    "href": "releases/V2_02_13.html",
    "title": "Version 2.02.13",
    "section": "",
    "text": "Citation: Gillespie, D., & Macaulay, J. (2024). PAMGuard/PAMGuard: PAMGuard Version 2.02.13 (V2.02.13). Zenodo. https://doi.org/10.5281/zenodo.13378951\nWindows Installer: Setup-Pamguard_2_02_13.exe"
  },
  {
    "objectID": "releases/V2_02_13.html#new-features",
    "href": "releases/V2_02_13.html#new-features",
    "title": "Version 2.02.13",
    "section": "New Features",
    "text": "New Features\nDeep Learning Classifier. Major upgrade to support for Deep Learning models in PAMGuard. See online help for details.\nClick detector: Remembers locations of displays and doesn’t continually reset them.\nHelp for Matched Click Classifier.\nProject information dialog. This allows capture of essential project information to store with your data. See menu item Settings/Project information.\n‘Effort’ management system. New map options allow colouring of track line by ‘effort’ from various other modules. This is currently the acquisition system (so the track will change colour when PAMGuard is running), the binary store system (likely the same as the acquisition) or data from Logger forms. This system will be extended to other modules in the near future.\nAdded a new exporter which allows users to export data to .mat (MATLAB, Python), .RData (open in R) or .wav files (open in Sonic Visualiser, Audacity etc.) Tethys Database\nMany users will be aware that we’re integrating an interface to the Tethys Database into PAMGuard. Some basic features are available for testing. If interested, please contact the PAMGuard support team."
  },
  {
    "objectID": "releases/V2_02_13.html#bug-fixes",
    "href": "releases/V2_02_13.html#bug-fixes",
    "title": "Version 2.02.13",
    "section": "Bug Fixes",
    "text": "Bug Fixes\nLinking clicks to offline clicks table. We had a database that had become corrupted so added code to relink offline clicks to their corresponding clicks from binary data.\nDrawing non-acoustic data: Data that were not associated with any hydrophones, e.g. visual sightings in Logger forms were not drawing on the map. This fixed and PAMGuard will use the vessels GPS position as reference.\nLookup tables: fix feature which was causing table entries to repeat.\nClick Train Detector: Add exception handlers to avoid errors as PAMGuard stops / restarts.\nGroup Detection starts and ends: Check data integrity function fixed and now inserts correct times of start and ends of events into database.\nClip generator. Changes to ensure PAMGuard keeps audio data long enough to make clips. In some circumstances data were being discarded too early so clips could not be created.\nAcquisition “Skip initial seconds” feature, designed to remove high sample levels e.g. from calibration tones at start of a soundtrap recording was not working with the click detector. This is fixed but replacing all data with 0’s and still sending data. Note that this may lead to artificially low noise measures at the start of a file.\nData reprocessing options. Updated to ensure that the option “Start normally. Note risk of overwriting!” is always available. Also improved code naming binary files to attempt to push them to exact times, rather than a couple of seconds after the hour.\nimproved code naming binary files to attempt to push them to exact times, rather than a couple of seconds after the hour.\nUpdated icons to improve display on high definition screens.\nSAIL Daq Card. Automatic restart when DAQ card stalls (happening increasingly often with latest Windows updates)\nFixed various bugs in CPOD and FPOD displays and importer. Updated CPOD help file.\nRelease notes for all versions"
  },
  {
    "objectID": "releases/V2_02_15.html",
    "href": "releases/V2_02_15.html",
    "title": "Version 2.02.15",
    "section": "",
    "text": "Gillespie, D., & Macaulay, J. (2024). PAMGuard (V2.02.15). Zenodo. https://doi.org/10.5281/zenodo.14414376\nWindows Installer: Setup-Pamguard_2_02_15.exe\nMac Installer: Setup-Pamguard_2_02_15.dmg\nNote that the current Mac version requires [Amazon Coretto 21](https://docs.aws.amazon.com/corretto/latest/corretto-21-ug/downloads-list.html) or equivalent to be installed. This will be no longer be necessary in V2.02.16.\n\nNew Features\nAdded ability to export click events to the exporter.\nUpdates to deep learning module to deal with group detections.\nNew icons and graphical user interface style for Mac.\n\n\nBug Fixes\nFixed important timing bug that affected offline analysis when there was a gap in data, causing certain binary files before the gap to be closed with an incorrect end time.\nFixed issue #177 with clip generator dialog always reverting to first available input source.\nRemoved unnecessary text output from DL classifier module.\nFixed units on spectrogram displays for air based measurements.\nFixed bug in whistle and moan detector graphics that caused whistles with branches to not draw.\nRelease notes for all versions"
  },
  {
    "objectID": "rocca/rocca_etp.html",
    "href": "rocca/rocca_etp.html",
    "title": "Eastern Tropical Pacific",
    "section": "",
    "text": "This is a Random Forest classifier model, and can classify 7 different species and 1 genus: Globicephala macrorhynchus, Pseudorca crassidens, Steno bredanensis, Stenella attenuata, Stenella coeruleoalba, Stenella longirostris, Tursiops truncatus, Delphinus species. For details see the full description in the download zip file\nDownload ETP Classifier\nBack to ROCCA Classifiers"
  },
  {
    "objectID": "rocca/rocca_etp.html#eastern-tropical-pacific-species-classifier",
    "href": "rocca/rocca_etp.html#eastern-tropical-pacific-species-classifier",
    "title": "Eastern Tropical Pacific",
    "section": "",
    "text": "This is a Random Forest classifier model, and can classify 7 different species and 1 genus: Globicephala macrorhynchus, Pseudorca crassidens, Steno bredanensis, Stenella attenuata, Stenella coeruleoalba, Stenella longirostris, Tursiops truncatus, Delphinus species. For details see the full description in the download zip file\nDownload ETP Classifier\nBack to ROCCA Classifiers"
  },
  {
    "objectID": "rocca/rocca_nea.html",
    "href": "rocca/rocca_nea.html",
    "title": "Northeast Atlantic",
    "section": "",
    "text": "This folder contains two Random Forest classifiers (one for clicks and one for whistles) for six commonly occurring northeast Atlantic delphinid species. These classifiers were trained with data collected from dipped hydrophones and towed hydrophone arrays deployed in combined visual and acoustic surveys. Only recordings of single species groups that had visual confirmation of species identity and were at least 4 nmi from any other species were included in the training dataset.\nDelphinus delphis (Dde)\nGrampus griseus (Ggr)\nGlobicephala melas (Gme)\nLagenorhynchus albirostris (Lal)\nOrcinus orca (Oor)\nTursiops truncatus (Ttr)\nFull details can be found in the pdf document contained in the zip file.\nDownload Northeast Atlantic Classifier\nBack to ROCCA Classifiers"
  },
  {
    "objectID": "rocca/rocca_nea.html#northeast-atlantic-classifier",
    "href": "rocca/rocca_nea.html#northeast-atlantic-classifier",
    "title": "Northeast Atlantic",
    "section": "",
    "text": "This folder contains two Random Forest classifiers (one for clicks and one for whistles) for six commonly occurring northeast Atlantic delphinid species. These classifiers were trained with data collected from dipped hydrophones and towed hydrophone arrays deployed in combined visual and acoustic surveys. Only recordings of single species groups that had visual confirmation of species identity and were at least 4 nmi from any other species were included in the training dataset.\nDelphinus delphis (Dde)\nGrampus griseus (Ggr)\nGlobicephala melas (Gme)\nLagenorhynchus albirostris (Lal)\nOrcinus orca (Oor)\nTursiops truncatus (Ttr)\nFull details can be found in the pdf document contained in the zip file.\nDownload Northeast Atlantic Classifier\nBack to ROCCA Classifiers"
  },
  {
    "objectID": "rocca/rocca_tp.html",
    "href": "rocca/rocca_tp.html",
    "title": "Temperate Pacific",
    "section": "",
    "text": "The Temperate Pacific classifier package consists of three different random forest classifier model files, trained with data collected using towed hydrophone arrays during combined visual and acoustic surveys in the temperate Pacific Ocean. 11 different species are included in the classifier files:\nBerardius bairdii (Bb)\nDelphinus capensis (Dc)\nDelphinus delphis (Dd)\nGrampus griseus (Gg)\nGlobicephala macrorhynchus (Gm)\nLagenorhynchus obliquidens (Lo)\nOrcinus orca (Oo)\nPhyseter macrocephalus  (Pm)\nStenella coeruleoalba (Sc)\nTursiops truncatus (Tt)\nZiphius cavirostris (Zc)\nFull details can be found in the pdf document contained in the zip file.\nDownload Temperate Pacific Classifier\nBack to ROCCA Classifiers"
  },
  {
    "objectID": "rocca/rocca_tp.html#temperate-pacific-classifier",
    "href": "rocca/rocca_tp.html#temperate-pacific-classifier",
    "title": "Temperate Pacific",
    "section": "",
    "text": "The Temperate Pacific classifier package consists of three different random forest classifier model files, trained with data collected using towed hydrophone arrays during combined visual and acoustic surveys in the temperate Pacific Ocean. 11 different species are included in the classifier files:\nBerardius bairdii (Bb)\nDelphinus capensis (Dc)\nDelphinus delphis (Dd)\nGrampus griseus (Gg)\nGlobicephala macrorhynchus (Gm)\nLagenorhynchus obliquidens (Lo)\nOrcinus orca (Oo)\nPhyseter macrocephalus  (Pm)\nStenella coeruleoalba (Sc)\nTursiops truncatus (Tt)\nZiphius cavirostris (Zc)\nFull details can be found in the pdf document contained in the zip file.\nDownload Temperate Pacific Classifier\nBack to ROCCA Classifiers"
  },
  {
    "objectID": "sourcecode.html",
    "href": "sourcecode.html",
    "title": "Source Code",
    "section": "",
    "text": "PAMGUARD is open source software licensed under the GNU General Public License V3.0 from the Free Software Foundation.\nPAMGuard is mostly written in Java which provides a good balance between speed, flexibility, and ease of development.\nInterfaces to external instruments, for example National Instruments data acquisition devices, are often written in C/C++ and accessed from the Java code using the Java Native Interface or use Java Native Access to communicate with device manufacturers C libraries.\nAll PAMGuard source code is available on GitHub."
  },
  {
    "objectID": "sourcecode.html#pamguard-source-code",
    "href": "sourcecode.html#pamguard-source-code",
    "title": "Source Code",
    "section": "",
    "text": "PAMGUARD is open source software licensed under the GNU General Public License V3.0 from the Free Software Foundation.\nPAMGuard is mostly written in Java which provides a good balance between speed, flexibility, and ease of development.\nInterfaces to external instruments, for example National Instruments data acquisition devices, are often written in C/C++ and accessed from the Java code using the Java Native Interface or use Java Native Access to communicate with device manufacturers C libraries.\nAll PAMGuard source code is available on GitHub."
  },
  {
    "objectID": "sourcecode.html#use-of-eclipse",
    "href": "sourcecode.html#use-of-eclipse",
    "title": "Source Code",
    "section": "Use of Eclipse",
    "text": "Use of Eclipse\nMany PAMGuard developers use the Eclipse IDE for code development. Click here for instructions on how to configure Eclipse with a GIT repository."
  },
  {
    "objectID": "sourcecode.html#assistance",
    "href": "sourcecode.html#assistance",
    "title": "Source Code",
    "section": "Assistance",
    "text": "Assistance\nInformation on the PAMGuard API and on how to make PAMGuard modules and plug-ins is available on this web site.\nThe PAMGuard team have limited time to spend assisting developers if the development project is in line with the interests of our current sponsors."
  },
  {
    "objectID": "team/doug.html",
    "href": "team/doug.html",
    "title": "Dr Doug Gillespie",
    "section": "",
    "text": "Doug Gillespie\n\n\nDr Douglas Gillespie completed a PhD in particle physics and worked at CERN before joining the IFAW research team and their vessel Song of the Whale.\nIn the late 1990’s, he wrote the Rainbow Click and Logger software which are very much the predecessors of modern day PAMGuard.\nDoug spends about half his time developing new functionality for PAMGuard and the other half using it to study marine mammals around the world."
  },
  {
    "objectID": "team/team.html",
    "href": "team/team.html",
    "title": "Meet the team",
    "section": "",
    "text": "PAMGuard is mostly developed and maintainted by a small team of research scientists working at the Sea Mammal Research Unit at the University of St Andrews in Scotland.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDr Doug Gillespie\n\n\nPAMGuard Developer\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDr Jamie Macaulay\n\n\nPAMGuard Developer\n\n\n\n\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "tutorials/staticmonitoring.html",
    "href": "tutorials/staticmonitoring.html",
    "title": "Introduction to static monitoring",
    "section": "",
    "text": "The Data Map allows you to rapidly navigate large datasets"
  },
  {
    "objectID": "tutorials/staticmonitoring.html#introduction-to-static-monitoring-in-pamguard",
    "href": "tutorials/staticmonitoring.html#introduction-to-static-monitoring-in-pamguard",
    "title": "Introduction to static monitoring",
    "section": "Introduction to static monitoring in PAMGuard",
    "text": "Introduction to static monitoring in PAMGuard\n\nIntroduction\nThis tutorial is a step by step guide for using PAMGuard to process long term recordings from a static autonomous recorder. The tutorial uses example data from a SoundTrap device deployed off the Scottish West Coast with plenty of dolphin and porpoise encounters. Species\n\nDolphins (multiple species)\nNBHF (harbour porpoises)\nHumpback whales\nSonar\n\n\n\nWhat you will learn\nUsers will be guided step by step in how to create a workflow in PAMGuard which processes medium frequency data to find whistles from dolphins and lower frequency data to detect baleen whale calls and man made sounds such military sonar. Some basic soundscape metrics such as a third octave noise measurements and long term spectral averages are explored. The SoundTrap device that was used to record also runs an on-board click detector at high frequencies to detect porpoise and dolphin echolocation clicks. The tutorial demonstrates how to import these data into PAMGuard.\nOnce users have set up their workflow the dataset contains a subset of sound files to process as an example. The dataset also contains the entire processed dataset so users can open PAMGuard viewer mode and view weeks of data as if they had processed the entire dataset. The tutorial demonstrates how to navigate through and visualise processed data, run additional species classifiers and export data to MATLAB, R and wav files.\nBy the end of the tutorial uses will be familiar with the basic capabilities of PAMGuard and how to construct an acoustic workflow and use the processed data. This provides a foundation for using more complex automated analysis methods such as deep learning classifications, click train detector and localisation methods.\n\n\nDownloads\nThe tutorial text is in Introduction to Sound Traps.pdf. You will also need to download the accompanying dataset from Zenodo \nRisch, D., Quer, S., Edwards, E., Beck, S., Macaulay, J., Calderan, S. (2018). Acoustic data from the Scottish west coast recorded with a single-element recording unit doi: 10.5281/zenodo.13880212"
  },
  {
    "objectID": "tutorials.html",
    "href": "tutorials.html",
    "title": "PAMGuard Tutorials",
    "section": "",
    "text": "PAMGuard Tutorials are an excellent way to familiarise yourself with PAMGuard.\nThe tutorials all use freely available pre-recorded sound files and will run on any compatible computer without the need for specialist equipment.\n\n\n\n\n\n\n\n\n\n\nGetting Started with PAMGuard\n\n\nThis tutorial will introduce some basic PAMGuard concepts, showing you how to use a range of PAMGuard detectors for clicks, whistle, and baleen whale sounds and to use…\n\n\n\n\n\n\n\n\n\n\n\n\n\nIntroduction to static monitoring\n\n\nThis tutorial is a step by step guide for using PAMGuard to process long term recordings from a static autonomous recorder.\n\n\n\n\n\n\n\n\n\n\n\n\n\nPAMGuard Tethys Interface\n\n\nThis tutorial will introduce the PAMGaurd-Tethys interface, show you how to export data from PAMGuard to Tethys, and view the data with the Tethys web client and data…\n\n\n\n\n\n\n\nNo matching items\n\n\nSubject to funding, we’re currently trying to expand these to cover more areas of what PAMGuard can do."
  }
]